{"ast":null,"code":"var _jsxFileName = \"/Users/avik/Desktop/My Stuff/SBU/Junior Year/Fall 2019/CSE 316/Homework 2/sandbox_todo/sandbox_hw2/src/App.js\";\nimport React, { Component } from 'react';\nimport testTodoListData from './TestTodoListData.json';\nimport HomeScreen from './components/home_screen/HomeScreen';\nimport ItemScreen from './components/item_screen/ItemScreen';\nimport ListScreen from './components/list_screen/ListScreen';\nimport jsTPS from './components/jsTPS/jsTPS';\nconst AppScreen = {\n  HOME_SCREEN: \"HOME_SCREEN\",\n  LIST_SCREEN: \"LIST_SCREEN\",\n  ITEM_SCREEN: \"ITEM_SCREEN\",\n  DELETE_SCREEN: \"DELETE_SCREEN\"\n};\n\nclass App extends Component {\n  constructor() {\n    super();\n    this.state = {\n      currentScreen: AppScreen.HOME_SCREEN,\n      todoLists: testTodoListData.todoLists,\n      currentList: null,\n      previousList: null,\n      currentItem: null,\n      createItem: false,\n      num: 1\n    };\n\n    this.createListItemCard = () => {\n      this.setState({\n        currentScreen: AppScreen.ITEM_SCREEN,\n        currentItem: null\n      });\n    };\n\n    this.editListItemCard = itemToEdit => {\n      this.setState({\n        currentScreen: AppScreen.ITEM_SCREEN,\n        currentItem: itemToEdit\n      });\n    };\n\n    this.goHome = () => {\n      this.jsTPSstack.clearAllTransactions();\n      this.setState({\n        currentScreen: AppScreen.HOME_SCREEN\n      });\n      this.setState({\n        currentList: null\n      });\n      let x = this.state.currentList;\n      console.log(x);\n    };\n\n    this.showDeleteDialog = () => {\n      document.getElementById('modal_yes_no_dialog_background_hide').id = 'modal_yes_no_dialog_background_show';\n\n      if (!this.state.num) {\n        document.getElementById('list_delete_list').addEventListener(\"click\", () => this.deleteList(this.state.currentList.name));\n        document.getElementById('list_cancel_delete_list').addEventListener(\"click\", () => this.hideDeleteDialog());\n        this.setState({\n          num: -10\n        });\n      }\n    };\n\n    this.hideDeleteDialog = () => {\n      let element = document.getElementById('modal_yes_no_dialog_background_show');\n\n      if (element) {\n        element.id = 'modal_yes_no_dialog_background_hide';\n      }\n    };\n\n    this.deleteList = listName => {\n      document.getElementById('modal_yes_no_dialog_background_show').id = 'modal_yes_no_dialog_background_hide';\n      this.state.todoLists.forEach((listItem, indexOfList) => {\n        if (listItem.name === listName) {\n          if (indexOfList >= 0) {\n            this.state.todoLists.splice(indexOfList, 1);\n            this.goHome();\n          }\n        }\n      });\n    };\n\n    this.getCurrentList = () => {\n      return this.state.currentList;\n    };\n\n    this.createNewList = () => {\n      let position = this.state.todoLists.length;\n      let newList = {\n        \"key\": position,\n        \"name\": \"Unknown\",\n        \"owner\": \"Unknown\",\n        \"items\": []\n      };\n      this.state.todoLists.push(newList);\n      this.loadList(newList);\n    };\n\n    this.loadList = todoListToLoad => {\n      if (this.state.previousList !== todoListToLoad) {\n        this.jsTPSstack.clearAllTransactions();\n      }\n\n      this.setState({\n        currentScreen: AppScreen.LIST_SCREEN,\n        currentList: todoListToLoad,\n        previousList: todoListToLoad,\n        currentItem: null,\n        num: this.state.num - 1\n      });\n      this.moveListToTop(todoListToLoad);\n      console.log(\"currentList: \" + this.state.currentList);\n      console.log(\"currentScreen: \" + this.state.currentScreen);\n    };\n\n    this.jsTPSstack = new jsTPS();\n  }\n\n  /**\n   * This function moves listToMove to the top of the list of lists\n   * that can be edited, which will be reflected on the welcome page.\n   */\n  moveListToTop(listToMove) {\n    // REMOVE THE LIST IF IT EXISTS\n    this.removeList(listToMove); // AND THEN ADD IT TO THE TOP OF THE STACK\n\n    this.prependList(listToMove);\n  }\n  /**\n  * Prepends the list to the list of lists.\n  * \n  * @param {TodoList} listToPrepend List to prepend to the list of lists.\n  */\n\n\n  prependList(listToPrepend) {\n    let tempTodoLists = this.state.todoLists;\n    tempTodoLists.unshift(listToPrepend);\n    this.setState({\n      todoLists: tempTodoLists\n    });\n  }\n  /**\n   * Removes the list from the list of lists.\n   * \n   * @param {TodoList} listToRemove List to remove, presumably it's been deleted.\n   */\n\n\n  removeList(listToRemove) {\n    // REMOVE IT IF IT EXISTS\n    let tempTodoLists = this.state.todoLists;\n    let indexOfList = tempTodoLists.indexOf(listToRemove);\n\n    if (indexOfList >= 0) {\n      tempTodoLists.splice(indexOfList, 1);\n    }\n\n    this.setState({\n      todoLists: tempTodoLists\n    });\n  }\n\n  // Add the listener here with listener()\n  render() {\n    switch (this.state.currentScreen) {\n      case AppScreen.HOME_SCREEN:\n        return React.createElement(HomeScreen, {\n          loadList: this.loadList.bind(this),\n          todoLists: this.state.todoLists,\n          createNewList: this.createNewList,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 163\n          },\n          __self: this\n        });\n\n      case AppScreen.LIST_SCREEN:\n        return React.createElement(ListScreen, {\n          goHome: this.goHome.bind(this),\n          todoList: this.state.currentList,\n          deleteList: this.showDeleteDialog,\n          loadList: this.loadList,\n          editListItemCard: this.editListItemCard,\n          createListItemCard: this.createListItemCard,\n          jsTPSstack: this.jsTPSstack,\n          getCurrentList: this.getCurrentList,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 168\n          },\n          __self: this\n        });\n\n      case AppScreen.ITEM_SCREEN:\n        return React.createElement(ItemScreen, {\n          currentItem: this.state.currentItem,\n          createItem: this.state.createItem,\n          loadList: this.loadList,\n          todoList: this.state.currentList,\n          jsTPSstack: this.jsTPSstack,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 178\n          },\n          __self: this\n        });\n\n      default:\n        return React.createElement(\"div\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 185\n          },\n          __self: this\n        }, \"ERROR\");\n    }\n  }\n\n}\n\nexport default App;","map":{"version":3,"sources":["/Users/avik/Desktop/My Stuff/SBU/Junior Year/Fall 2019/CSE 316/Homework 2/sandbox_todo/sandbox_hw2/src/App.js"],"names":["React","Component","testTodoListData","HomeScreen","ItemScreen","ListScreen","jsTPS","AppScreen","HOME_SCREEN","LIST_SCREEN","ITEM_SCREEN","DELETE_SCREEN","App","constructor","state","currentScreen","todoLists","currentList","previousList","currentItem","createItem","num","createListItemCard","setState","editListItemCard","itemToEdit","goHome","jsTPSstack","clearAllTransactions","x","console","log","showDeleteDialog","document","getElementById","id","addEventListener","deleteList","name","hideDeleteDialog","element","listName","forEach","listItem","indexOfList","splice","getCurrentList","createNewList","position","length","newList","push","loadList","todoListToLoad","moveListToTop","listToMove","removeList","prependList","listToPrepend","tempTodoLists","unshift","listToRemove","indexOf","render","bind"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\nimport testTodoListData from './TestTodoListData.json'\nimport HomeScreen from './components/home_screen/HomeScreen'\nimport ItemScreen from './components/item_screen/ItemScreen'\nimport ListScreen from './components/list_screen/ListScreen'\nimport jsTPS from './components/jsTPS/jsTPS'\n\nconst AppScreen = {\n  HOME_SCREEN: \"HOME_SCREEN\",\n  LIST_SCREEN: \"LIST_SCREEN\",\n  ITEM_SCREEN: \"ITEM_SCREEN\",\n  DELETE_SCREEN: \"DELETE_SCREEN\"\n}\n\nclass App extends Component {\n  state = {\n    currentScreen: AppScreen.HOME_SCREEN,\n    todoLists: testTodoListData.todoLists,\n    currentList: null,\n    previousList: null,\n    currentItem: null,\n    createItem: false,\n    num: 1,\n  }\n\n  constructor() {\n    super();\n    this.jsTPSstack = new jsTPS();\n  }\n\n  createListItemCard = () => {\n    this.setState({\n      currentScreen: AppScreen.ITEM_SCREEN,\n      currentItem: null\n    });\n  }\n\n  editListItemCard = (itemToEdit) => {\n    this.setState({\n      currentScreen: AppScreen.ITEM_SCREEN,\n      currentItem: itemToEdit\n    });\n  }\n\n  goHome = () => {\n    this.jsTPSstack.clearAllTransactions();\n\n    this.setState({ currentScreen: AppScreen.HOME_SCREEN });\n    this.setState({ currentList: null });\n    let x = this.state.currentList;\n    console.log(x);\n  }\n\n  showDeleteDialog = () => {\n    document.getElementById('modal_yes_no_dialog_background_hide').id = 'modal_yes_no_dialog_background_show';\n\n    if (!this.state.num) {\n      document.getElementById('list_delete_list').addEventListener(\"click\", () => this.deleteList(this.state.currentList.name));\n      document.getElementById('list_cancel_delete_list').addEventListener(\"click\", () => this.hideDeleteDialog());\n      this.setState({ num: -10 });\n\n    }\n  }\n\n  hideDeleteDialog = () => {\n    let element = document.getElementById('modal_yes_no_dialog_background_show');\n\n    if (element) {\n      element.id = 'modal_yes_no_dialog_background_hide';\n    }\n  }\n\n  deleteList = (listName) => {\n    document.getElementById('modal_yes_no_dialog_background_show').id = 'modal_yes_no_dialog_background_hide';\n\n    this.state.todoLists.forEach((listItem, indexOfList) => {\n      if (listItem.name === listName) {\n        if (indexOfList >= 0) {\n          this.state.todoLists.splice(indexOfList, 1);\n          this.goHome();\n        }\n      }\n    });\n  }\n\n  getCurrentList = () =>\n  {\n    return this.state.currentList;\n  }\n\n  createNewList = () => {\n    let position = this.state.todoLists.length;\n    let newList = {\n      \"key\": position,\n      \"name\": \"Unknown\",\n      \"owner\": \"Unknown\",\n      \"items\": []\n    }\n\n    this.state.todoLists.push(newList);\n    this.loadList(newList);\n  }\n\n  /**\n   * This function moves listToMove to the top of the list of lists\n   * that can be edited, which will be reflected on the welcome page.\n   */\n  moveListToTop(listToMove) {\n    // REMOVE THE LIST IF IT EXISTS\n    this.removeList(listToMove);\n\n    // AND THEN ADD IT TO THE TOP OF THE STACK\n    this.prependList(listToMove);\n  }\n\n  /**\n * Prepends the list to the list of lists.\n * \n * @param {TodoList} listToPrepend List to prepend to the list of lists.\n */\n  prependList(listToPrepend) {\n    let tempTodoLists = this.state.todoLists;\n    tempTodoLists.unshift(listToPrepend);\n    this.setState({ todoLists: tempTodoLists });\n  }\n\n  /**\n   * Removes the list from the list of lists.\n   * \n   * @param {TodoList} listToRemove List to remove, presumably it's been deleted.\n   */\n  removeList(listToRemove) {\n    // REMOVE IT IF IT EXISTS\n    let tempTodoLists = this.state.todoLists;\n    let indexOfList = tempTodoLists.indexOf(listToRemove);\n    if (indexOfList >= 0) {\n      tempTodoLists.splice(indexOfList, 1);\n    }\n    this.setState({ todoLists: tempTodoLists });\n  }\n\n  loadList = (todoListToLoad) => {\n    if (this.state.previousList !== todoListToLoad) {\n      this.jsTPSstack.clearAllTransactions();\n    }\n    this.setState({\n      currentScreen: AppScreen.LIST_SCREEN,\n      currentList: todoListToLoad,\n      previousList: todoListToLoad,\n      currentItem: null,\n      num: this.state.num - 1\n    });\n    this.moveListToTop(todoListToLoad);\n    console.log(\"currentList: \" + this.state.currentList);\n    console.log(\"currentScreen: \" + this.state.currentScreen);\n  }\n\n  // Add the listener here with listener()\n\n  render() {\n    switch (this.state.currentScreen) {\n      case AppScreen.HOME_SCREEN:\n        return <HomeScreen\n          loadList={this.loadList.bind(this)}\n          todoLists={this.state.todoLists}\n          createNewList={this.createNewList} />;\n      case AppScreen.LIST_SCREEN:\n        return <ListScreen\n          goHome={this.goHome.bind(this)}\n          todoList={this.state.currentList}\n          deleteList={this.showDeleteDialog}\n          loadList={this.loadList}\n          editListItemCard={this.editListItemCard}\n          createListItemCard={this.createListItemCard}\n          jsTPSstack={this.jsTPSstack}\n          getCurrentList={this.getCurrentList} />;\n      case AppScreen.ITEM_SCREEN:\n        return <ItemScreen\n          currentItem={this.state.currentItem}\n          createItem={this.state.createItem}\n          loadList={this.loadList}\n          todoList={this.state.currentList}\n          jsTPSstack={this.jsTPSstack} />;\n      default:\n        return <div>ERROR</div>;\n    }\n  }\n}\n\nexport default App;"]},"metadata":{},"sourceType":"module"}