{"ast":null,"code":"import jsTPS from './jsTPS';\n/**\n *\n * @author Avik Kadakia\n */\n\nclass ListNameChange_Transaction extends jsTPS {\n  /**\n   * Constructor for this transaction, it initializes this\n   * object with all the data needed to both do and undo\n   * the transaction.\n   * \n   * @param previousName\n   * @param newName     \n   * @param toDoList\n   */\n  constructor(previousName, newName, toDoList) {\n    // KEEP THESE FOR LATER\n    super();\n    this.prevListName = previousName;\n    this.newListName = newName;\n    this.todoList = toDoList;\n  }\n  /**\n   * This transaction simply changes the list name to the new name.\n   */\n\n\n  doTransaction() {\n    // if(this.todoList.name === this.oldName)\n    // {\n    this.todoList.name = this.newListName; // }\n  }\n  /**\n   * As the reverse of do, changes the list name to the old name.\n   */\n\n\n  undoTransaction() {} // Change the list to the old name\n\n  /**\n   * Provides a textual summary of this transaction.\n   * \n   * @return A string storing a textual summary of this object.\n   */\n\n\n  toString() {\n    return this.prevListName + \" changed to \" + this.newListName;\n  }\n\n}\n\nexport default ListNameChange_Transaction;","map":{"version":3,"sources":["/Users/avik/Desktop/My Stuff/SBU/Junior Year/Fall 2019/CSE 316/Homework 2/sandbox_todo/sandbox_hw2/src/components/jsTPS/ListNameChange_Transaction.js"],"names":["jsTPS","ListNameChange_Transaction","constructor","previousName","newName","toDoList","prevListName","newListName","todoList","doTransaction","name","undoTransaction","toString"],"mappings":"AAAA,OAAOA,KAAP,MAAkB,SAAlB;AAEA;;;;;AAIA,MAAMC,0BAAN,SAAyCD,KAAzC,CAA+C;AAC3C;;;;;;;;;AASAE,EAAAA,WAAW,CAACC,YAAD,EAAeC,OAAf,EAAwBC,QAAxB,EAAkC;AACzC;AACA;AACA,SAAKC,YAAL,GAAoBH,YAApB;AACA,SAAKI,WAAL,GAAmBH,OAAnB;AACA,SAAKI,QAAL,GAAgBH,QAAhB;AACH;AAED;;;;;AAGAI,EAAAA,aAAa,GAAG;AAEZ;AACA;AACI,SAAKD,QAAL,CAAcE,IAAd,GAAqB,KAAKH,WAA1B,CAJQ,CAKZ;AACH;AAED;;;;;AAGAI,EAAAA,eAAe,GAAG,CAEjB,CAFc,CACX;;AAGJ;;;;;;;AAKAC,EAAAA,QAAQ,GAAG;AACP,WAAO,KAAKN,YAAL,GAAoB,cAApB,GAAqC,KAAKC,WAAjD;AACH;;AA3C0C;;AA8C/C,eAAeN,0BAAf","sourcesContent":["import jsTPS from './jsTPS'\n\n/**\n *\n * @author Avik Kadakia\n */\nclass ListNameChange_Transaction extends jsTPS {\n    /**\n     * Constructor for this transaction, it initializes this\n     * object with all the data needed to both do and undo\n     * the transaction.\n     * \n     * @param previousName\n     * @param newName     \n     * @param toDoList\n     */\n    constructor(previousName, newName, toDoList) {\n        // KEEP THESE FOR LATER\n        super();\n        this.prevListName = previousName;\n        this.newListName = newName;\n        this.todoList = toDoList;\n    }\n\n    /**\n     * This transaction simply changes the list name to the new name.\n     */\n    doTransaction() {\n        \n        // if(this.todoList.name === this.oldName)\n        // {\n            this.todoList.name = this.newListName;\n        // }\n    }\n\n    /**\n     * As the reverse of do, changes the list name to the old name.\n     */\n    undoTransaction() {\n        // Change the list to the old name\n    }\n\n    /**\n     * Provides a textual summary of this transaction.\n     * \n     * @return A string storing a textual summary of this object.\n     */\n    toString() {\n        return this.prevListName + \" changed to \" + this.newListName;\n    }\n}\n\nexport default ListNameChange_Transaction"]},"metadata":{},"sourceType":"module"}