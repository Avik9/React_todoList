{"ast":null,"code":"import jsTPS_Transaction from './jsTPS_Transaction';\n/**\n *\n * @author Avik Kadakia\n */\n\nclass ListItemEdit_Transaction extends jsTPS_Transaction {\n  /**\n   * Constructor for this transaction, it initializes this\n   * object with all the data needed to both do and undo\n   * the transaction.\n   * \n   * @param prevItem\n   * @param newItem\n   * @param toDoList\n   */\n  constructor(newDescription, newAssignedTo, newDueDate, newCompleted, listItemCard) {\n    // KEEP THESE FOR LATER\n    super();\n    this.newDescription = newDescription;\n    this.newAssignedTo = newAssignedTo;\n    this.newDueDate = newDueDate;\n    this.newCompleted = newCompleted;\n    this.listItem = listItemCard;\n  }\n  /**\n   * This transaction simply adds the value to the num.\n   */\n\n\n  doTransaction() {} // Change the old item to the new item\n\n  /**\n   * As the reverse of do, this method substracts from num.\n   */\n\n\n  undoTransaction() {} // Change the new item to the old item\n\n  /**\n   * Provides a textual summary of this transaction.\n   * \n   * @return A string storing a textual summary of this object.\n   */\n\n\n  toString() {\n    return this.previousItem + \" was editted\";\n  }\n\n}\n\nexport default ListItemEdit_Transaction;","map":{"version":3,"sources":["/Users/avik/Desktop/My Stuff/SBU/Junior Year/Fall 2019/CSE 316/Homework 2/sandbox_todo/sandbox_hw2/src/components/jsTPS/ListItemEdit_Transaction.js"],"names":["jsTPS_Transaction","ListItemEdit_Transaction","constructor","newDescription","newAssignedTo","newDueDate","newCompleted","listItemCard","listItem","doTransaction","undoTransaction","toString","previousItem"],"mappings":"AAAA,OAAOA,iBAAP,MAA8B,qBAA9B;AAEA;;;;;AAIA,MAAMC,wBAAN,SAAuCD,iBAAvC,CAAwD;AACpD;;;;;;;;;AASAE,EAAAA,WAAW,CAACC,cAAD,EAAiBC,aAAjB,EAAgCC,UAAhC,EAA4CC,YAA5C,EAA0DC,YAA1D,EAAwE;AAC/E;AACA;AACA,SAAKJ,cAAL,GAAsBA,cAAtB;AACA,SAAKC,aAAL,GAAqBA,aAArB;AACA,SAAKC,UAAL,GAAkBA,UAAlB;AACA,SAAKC,YAAL,GAAoBA,YAApB;AACA,SAAKE,QAAL,GAAgBD,YAAhB;AACH;AAED;;;;;AAGAE,EAAAA,aAAa,GAAG,CAEf,CAFY,CACT;;AAGJ;;;;;AAGAC,EAAAA,eAAe,GAAG,CAEjB,CAFc,CACX;;AAGJ;;;;;;;AAKAC,EAAAA,QAAQ,GAAG;AACP,WAAO,KAAKC,YAAL,GAAoB,cAA3B;AACH;;AAzCmD;;AA4CxD,eAAeX,wBAAf","sourcesContent":["import jsTPS_Transaction from './jsTPS_Transaction'\n\n/**\n *\n * @author Avik Kadakia\n */\nclass ListItemEdit_Transaction extends jsTPS_Transaction{\n    /**\n     * Constructor for this transaction, it initializes this\n     * object with all the data needed to both do and undo\n     * the transaction.\n     * \n     * @param prevItem\n     * @param newItem\n     * @param toDoList\n     */\n    constructor(newDescription, newAssignedTo, newDueDate, newCompleted, listItemCard) {\n        // KEEP THESE FOR LATER\n        super();\n        this.newDescription = newDescription;\n        this.newAssignedTo = newAssignedTo;\n        this.newDueDate = newDueDate;\n        this.newCompleted = newCompleted;\n        this.listItem = listItemCard;\n    }\n\n    /**\n     * This transaction simply adds the value to the num.\n     */\n    doTransaction() {\n        // Change the old item to the new item\n    }\n\n    /**\n     * As the reverse of do, this method substracts from num.\n     */\n    undoTransaction() {\n        // Change the new item to the old item\n    }\n\n    /**\n     * Provides a textual summary of this transaction.\n     * \n     * @return A string storing a textual summary of this object.\n     */\n    toString() {\n        return this.previousItem + \" was editted\";\n    }\n}\n\nexport default ListItemEdit_Transaction"]},"metadata":{},"sourceType":"module"}