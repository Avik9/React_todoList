{"ast":null,"code":"var _jsxFileName = \"/Users/avik/Desktop/My Stuff/SBU/Junior Year/Fall 2019/CSE 316/Homework 2/sandbox_todo/sandbox_hw2/src/components/item_screen/ItemScreen.js\";\nimport React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nexport class ItemScreen extends Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      createItem: false\n    };\n\n    this.submitItemChanges = () => {\n      if (this.state.createItem) {\n        this.updateItem();\n      } else {\n        this.createNewItem();\n      }\n\n      this.props.currentItem = null;\n      this.emptyItemPanel();\n      this.props.goList();\n    };\n\n    this.cancelItemChanges = () => {\n      this.props.currentItem = null;\n      this.setState({\n        createItem: false\n      });\n      this.emptyItemPanel();\n      this.props.goList();\n    };\n\n    this.updateItem = () => {\n      let description = document.getElementById('item_description_textfield');\n      this.props.currentItem.description = description;\n      let assignedTo = document.getElementById('assigned_to_textfield');\n      this.props.currentItem.assigned_to = assignedTo;\n      let dueDate = document.getElementById('due_date_dropdown');\n      this.props.currentItem.dueDate = dueDate;\n      let completed = document.getElementById('completed_checkbox');\n      this.props.currentItem.completed = completed;\n      this.props.loadList(this.props.todoList);\n    };\n\n    this.emptyItemPanel = () => {\n      let description = document.getElementById('item_description_textfield');\n      description.value = \"\";\n      let assignedTo = document.getElementById('assigned_to_textfield');\n      assignedTo.value = \"\";\n      let dueDate = document.getElementById('due_date_dropdown');\n      dueDate.value = \"\";\n      let completed = document.getElementById('completed_checkbox');\n      completed.checked = false;\n    };\n\n    this.getLength = () => {\n      let counter = 0;\n      this.props.todoList.items.forEach(() => {\n        counter++;\n      });\n      return counter;\n    };\n\n    this.createNewItem = () => {\n      let position = this.getLength();\n      let newItem = {\n        key: position,\n        description: document.getElementById('item_description_textfield').value,\n        assigned_to: document.getElementById('assigned_to_textfield').value,\n        due_date: document.getElementById('due_date_dropdown').value,\n        completed: document.getElementById('completed_checkbox').value\n      };\n      this.props.todoList.items.push(newItem);\n      this.props.loadList(this.props.todoList);\n    };\n  }\n\n  render() {\n    if (this.props.currentItem) {\n      let itemToLoad = this.props.currentItem;\n      return React.createElement(\"div\", {\n        id: \"todo_item\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 108\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        id: \"item_container\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 109\n        },\n        __self: this\n      }, \"Item\"), React.createElement(\"div\", {\n        id: \"item_name_container\",\n        class: \"text_toolbar\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 110\n        },\n        __self: this\n      }, React.createElement(\"span\", {\n        id: \"description_prompt\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 111\n        },\n        __self: this\n      }, \"Description:\"), React.createElement(\"input\", {\n        type: \"text\",\n        defaultValue: itemToLoad.description,\n        id: \"item_description_textfield\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 112\n        },\n        __self: this\n      })), React.createElement(\"div\", {\n        id: \"assigned_to_container\",\n        class: \"text_toolbar\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 114\n        },\n        __self: this\n      }, React.createElement(\"span\", {\n        id: \"assigned_to_prompt\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 115\n        },\n        __self: this\n      }, \"Assigned To:\"), React.createElement(\"input\", {\n        type: \"text\",\n        defaultValue: itemToLoad.assigned_to,\n        id: \"assigned_to_textfield\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 116\n        },\n        __self: this\n      })), React.createElement(\"div\", {\n        id: \"due_date_container\",\n        class: \"text_toolbar\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 118\n        },\n        __self: this\n      }, React.createElement(\"span\", {\n        id: \"due_date_prompt\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 119\n        },\n        __self: this\n      }, \"Due Date:\"), React.createElement(\"input\", {\n        type: \"date\",\n        defaultValue: itemToLoad.due_date,\n        id: \"due_date_dropdown\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 120\n        },\n        __self: this\n      })), React.createElement(\"div\", {\n        id: \"completed_container\",\n        class: \"text_toolbar\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 122\n        },\n        __self: this\n      }, React.createElement(\"span\", {\n        id: \"completed_prompt\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 123\n        },\n        __self: this\n      }, \"Completed:\"), React.createElement(\"input\", {\n        type: \"checkbox\",\n        defaultValue: itemToLoad.completed,\n        id: \"completed_checkbox\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 124\n        },\n        __self: this\n      })), React.createElement(\"div\", {\n        id: \"list_submit_buttons\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 126\n        },\n        __self: this\n      }, React.createElement(\"button\", {\n        id: \"list_submit_list\",\n        onClick: this.submitItemChanges,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 127\n        },\n        __self: this\n      }, \"Submit\"), React.createElement(\"button\", {\n        id: \"list_cancel_submit_list\",\n        onClick: this.cancelItemChanges,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 128\n        },\n        __self: this\n      }, \"Cancel\")));\n    } else {\n      return React.createElement(\"div\", {\n        id: \"todo_item\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 135\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        id: \"item_container\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 136\n        },\n        __self: this\n      }, \"Item\"), React.createElement(\"div\", {\n        id: \"item_name_container\",\n        class: \"text_toolbar\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 137\n        },\n        __self: this\n      }, React.createElement(\"span\", {\n        id: \"description_prompt\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 138\n        },\n        __self: this\n      }, \"Description:\"), React.createElement(\"input\", {\n        type: \"text\",\n        defaultValue: \"\",\n        id: \"item_description_textfield\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 139\n        },\n        __self: this\n      })), React.createElement(\"div\", {\n        id: \"assigned_to_container\",\n        class: \"text_toolbar\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 141\n        },\n        __self: this\n      }, React.createElement(\"span\", {\n        id: \"assigned_to_prompt\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 142\n        },\n        __self: this\n      }, \"Assigned To:\"), React.createElement(\"input\", {\n        type: \"text\",\n        defaultValue: \"\",\n        id: \"assigned_to_textfield\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 143\n        },\n        __self: this\n      })), React.createElement(\"div\", {\n        id: \"due_date_container\",\n        class: \"text_toolbar\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 145\n        },\n        __self: this\n      }, React.createElement(\"span\", {\n        id: \"due_date_prompt\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 146\n        },\n        __self: this\n      }, \"Due Date:\"), React.createElement(\"input\", {\n        type: \"date\",\n        defaultValue: \"\",\n        id: \"due_date_dropdown\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 147\n        },\n        __self: this\n      })), React.createElement(\"div\", {\n        id: \"completed_container\",\n        class: \"text_toolbar\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 149\n        },\n        __self: this\n      }, React.createElement(\"span\", {\n        id: \"completed_prompt\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 150\n        },\n        __self: this\n      }, \"Completed:\"), React.createElement(\"input\", {\n        type: \"checkbox\",\n        defaultValue: false,\n        id: \"completed_checkbox\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 151\n        },\n        __self: this\n      })), React.createElement(\"div\", {\n        id: \"list_submit_buttons\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 153\n        },\n        __self: this\n      }, React.createElement(\"button\", {\n        id: \"list_submit_list\",\n        onClick: this.submitItemChanges,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 154\n        },\n        __self: this\n      }, \"Submit\"), React.createElement(\"button\", {\n        id: \"list_cancel_submit_list\",\n        onClick: this.cancelItemChanges,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 155\n        },\n        __self: this\n      }, \"Cancel\")));\n    }\n  }\n\n}\nItemScreen.propTypes = {\n  currentScreen: PropTypes.string.isRequired,\n  todoItem: PropTypes.object.isRequired\n};\nexport default ItemScreen;","map":{"version":3,"sources":["/Users/avik/Desktop/My Stuff/SBU/Junior Year/Fall 2019/CSE 316/Homework 2/sandbox_todo/sandbox_hw2/src/components/item_screen/ItemScreen.js"],"names":["React","Component","PropTypes","ItemScreen","state","createItem","submitItemChanges","updateItem","createNewItem","props","currentItem","emptyItemPanel","goList","cancelItemChanges","setState","description","document","getElementById","assignedTo","assigned_to","dueDate","completed","loadList","todoList","value","checked","getLength","counter","items","forEach","position","newItem","key","due_date","push","render","itemToLoad","propTypes","currentScreen","string","isRequired","todoItem","object"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,OAAOC,SAAP,MAAsB,YAAtB;AAEA,OAAO,MAAMC,UAAN,SAAyBF,SAAzB,CAAmC;AAAA;AAAA;AAAA,SACtCG,KADsC,GAC9B;AACJC,MAAAA,UAAU,EAAE;AADR,KAD8B;;AAAA,SAOtCC,iBAPsC,GAOlB,MAAM;AAEtB,UAAI,KAAKF,KAAL,CAAWC,UAAf,EAA2B;AACvB,aAAKE,UAAL;AACH,OAFD,MAIK;AACD,aAAKC,aAAL;AACH;;AAED,WAAKC,KAAL,CAAWC,WAAX,GAAyB,IAAzB;AAEA,WAAKC,cAAL;AAEA,WAAKF,KAAL,CAAWG,MAAX;AACH,KAtBqC;;AAAA,SA2BtCC,iBA3BsC,GA2BlB,MAAM;AACtB,WAAKJ,KAAL,CAAWC,WAAX,GAAyB,IAAzB;AACA,WAAKI,QAAL,CAAc;AAACT,QAAAA,UAAU,EAAE;AAAb,OAAd;AAEA,WAAKM,cAAL;AAEA,WAAKF,KAAL,CAAWG,MAAX;AACH,KAlCqC;;AAAA,SAuCtCL,UAvCsC,GAuCzB,MAAM;AACf,UAAIQ,WAAW,GAAGC,QAAQ,CAACC,cAAT,CAAwB,4BAAxB,CAAlB;AACA,WAAKR,KAAL,CAAWC,WAAX,CAAuBK,WAAvB,GAAqCA,WAArC;AAEA,UAAIG,UAAU,GAAGF,QAAQ,CAACC,cAAT,CAAwB,uBAAxB,CAAjB;AACA,WAAKR,KAAL,CAAWC,WAAX,CAAuBS,WAAvB,GAAqCD,UAArC;AAEA,UAAIE,OAAO,GAAGJ,QAAQ,CAACC,cAAT,CAAwB,mBAAxB,CAAd;AACA,WAAKR,KAAL,CAAWC,WAAX,CAAuBU,OAAvB,GAAiCA,OAAjC;AAEA,UAAIC,SAAS,GAAGL,QAAQ,CAACC,cAAT,CAAwB,oBAAxB,CAAhB;AACA,WAAKR,KAAL,CAAWC,WAAX,CAAuBW,SAAvB,GAAmCA,SAAnC;AAEA,WAAKZ,KAAL,CAAWa,QAAX,CAAoB,KAAKb,KAAL,CAAWc,QAA/B;AACH,KArDqC;;AAAA,SA0DtCZ,cA1DsC,GA0DrB,MAAM;AACnB,UAAII,WAAW,GAAGC,QAAQ,CAACC,cAAT,CAAwB,4BAAxB,CAAlB;AACAF,MAAAA,WAAW,CAACS,KAAZ,GAAoB,EAApB;AAEA,UAAIN,UAAU,GAAGF,QAAQ,CAACC,cAAT,CAAwB,uBAAxB,CAAjB;AACAC,MAAAA,UAAU,CAACM,KAAX,GAAmB,EAAnB;AAEA,UAAIJ,OAAO,GAAGJ,QAAQ,CAACC,cAAT,CAAwB,mBAAxB,CAAd;AACAG,MAAAA,OAAO,CAACI,KAAR,GAAgB,EAAhB;AAEA,UAAIH,SAAS,GAAGL,QAAQ,CAACC,cAAT,CAAwB,oBAAxB,CAAhB;AACAI,MAAAA,SAAS,CAACI,OAAV,GAAoB,KAApB;AACH,KAtEqC;;AAAA,SAwEtCC,SAxEsC,GAwE1B,MAAM;AACd,UAAIC,OAAO,GAAG,CAAd;AAEA,WAAKlB,KAAL,CAAWc,QAAX,CAAoBK,KAApB,CAA0BC,OAA1B,CAAkC,MAAM;AACpCF,QAAAA,OAAO;AACV,OAFD;AAIA,aAAOA,OAAP;AACH,KAhFqC;;AAAA,SAqFtCnB,aArFsC,GAqFtB,MAAM;AAClB,UAAIsB,QAAQ,GAAG,KAAKJ,SAAL,EAAf;AAEA,UAAIK,OAAO,GAAG;AACVC,QAAAA,GAAG,EAAEF,QADK;AAEVf,QAAAA,WAAW,EAAEC,QAAQ,CAACC,cAAT,CAAwB,4BAAxB,EAAsDO,KAFzD;AAGVL,QAAAA,WAAW,EAAEH,QAAQ,CAACC,cAAT,CAAwB,uBAAxB,EAAiDO,KAHpD;AAIVS,QAAAA,QAAQ,EAAEjB,QAAQ,CAACC,cAAT,CAAwB,mBAAxB,EAA6CO,KAJ7C;AAKVH,QAAAA,SAAS,EAAEL,QAAQ,CAACC,cAAT,CAAwB,oBAAxB,EAA8CO;AAL/C,OAAd;AAQA,WAAKf,KAAL,CAAWc,QAAX,CAAoBK,KAApB,CAA0BM,IAA1B,CAA+BH,OAA/B;AACA,WAAKtB,KAAL,CAAWa,QAAX,CAAoB,KAAKb,KAAL,CAAWc,QAA/B;AACH,KAlGqC;AAAA;;AAoGtCY,EAAAA,MAAM,GAAG;AACL,QAAI,KAAK1B,KAAL,CAAWC,WAAf,EAA4B;AACxB,UAAI0B,UAAU,GAAG,KAAK3B,KAAL,CAAWC,WAA5B;AACA,aACI;AAAK,QAAA,EAAE,EAAC,WAAR;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACI;AAAK,QAAA,EAAE,EAAC,gBAAR;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBADJ,EAEI;AAAK,QAAA,EAAE,EAAC,qBAAR;AAA8B,QAAA,KAAK,EAAC,cAApC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACI;AAAM,QAAA,EAAE,EAAC,oBAAT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,wBADJ,EAEI;AAAO,QAAA,IAAI,EAAC,MAAZ;AAAmB,QAAA,YAAY,EAAE0B,UAAU,CAACrB,WAA5C;AAAyD,QAAA,EAAE,EAAC,4BAA5D;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAFJ,CAFJ,EAMI;AAAK,QAAA,EAAE,EAAC,uBAAR;AAAgC,QAAA,KAAK,EAAC,cAAtC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACI;AAAM,QAAA,EAAE,EAAC,oBAAT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,wBADJ,EAEI;AAAO,QAAA,IAAI,EAAC,MAAZ;AAAmB,QAAA,YAAY,EAAEqB,UAAU,CAACjB,WAA5C;AAAyD,QAAA,EAAE,EAAC,uBAA5D;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAFJ,CANJ,EAUI;AAAK,QAAA,EAAE,EAAC,oBAAR;AAA6B,QAAA,KAAK,EAAC,cAAnC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACI;AAAM,QAAA,EAAE,EAAC,iBAAT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,qBADJ,EAEI;AAAO,QAAA,IAAI,EAAC,MAAZ;AAAmB,QAAA,YAAY,EAAEiB,UAAU,CAACH,QAA5C;AAAsD,QAAA,EAAE,EAAC,mBAAzD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAFJ,CAVJ,EAcI;AAAK,QAAA,EAAE,EAAC,qBAAR;AAA8B,QAAA,KAAK,EAAC,cAApC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACI;AAAM,QAAA,EAAE,EAAC,kBAAT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBADJ,EAEI;AAAO,QAAA,IAAI,EAAC,UAAZ;AAAuB,QAAA,YAAY,EAAEG,UAAU,CAACf,SAAhD;AAA2D,QAAA,EAAE,EAAC,oBAA9D;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAFJ,CAdJ,EAkBI;AAAK,QAAA,EAAE,EAAC,qBAAR;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACI;AAAQ,QAAA,EAAE,EAAC,kBAAX;AAA8B,QAAA,OAAO,EAAE,KAAKf,iBAA5C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBADJ,EAEI;AAAQ,QAAA,EAAE,EAAC,yBAAX;AAAqC,QAAA,OAAO,EAAE,KAAKO,iBAAnD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBAFJ,CAlBJ,CADJ;AAyBH,KA3BD,MA4BK;AACD,aACI;AAAK,QAAA,EAAE,EAAC,WAAR;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACI;AAAK,QAAA,EAAE,EAAC,gBAAR;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBADJ,EAEI;AAAK,QAAA,EAAE,EAAC,qBAAR;AAA8B,QAAA,KAAK,EAAC,cAApC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACI;AAAM,QAAA,EAAE,EAAC,oBAAT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,wBADJ,EAEI;AAAO,QAAA,IAAI,EAAC,MAAZ;AAAmB,QAAA,YAAY,EAAE,EAAjC;AAAqC,QAAA,EAAE,EAAC,4BAAxC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAFJ,CAFJ,EAMI;AAAK,QAAA,EAAE,EAAC,uBAAR;AAAgC,QAAA,KAAK,EAAC,cAAtC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACI;AAAM,QAAA,EAAE,EAAC,oBAAT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,wBADJ,EAEI;AAAO,QAAA,IAAI,EAAC,MAAZ;AAAmB,QAAA,YAAY,EAAE,EAAjC;AAAqC,QAAA,EAAE,EAAC,uBAAxC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAFJ,CANJ,EAUI;AAAK,QAAA,EAAE,EAAC,oBAAR;AAA6B,QAAA,KAAK,EAAC,cAAnC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACI;AAAM,QAAA,EAAE,EAAC,iBAAT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,qBADJ,EAEI;AAAO,QAAA,IAAI,EAAC,MAAZ;AAAmB,QAAA,YAAY,EAAE,EAAjC;AAAqC,QAAA,EAAE,EAAC,mBAAxC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAFJ,CAVJ,EAcI;AAAK,QAAA,EAAE,EAAC,qBAAR;AAA8B,QAAA,KAAK,EAAC,cAApC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACI;AAAM,QAAA,EAAE,EAAC,kBAAT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBADJ,EAEI;AAAO,QAAA,IAAI,EAAC,UAAZ;AAAuB,QAAA,YAAY,EAAE,KAArC;AAA4C,QAAA,EAAE,EAAC,oBAA/C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAFJ,CAdJ,EAkBI;AAAK,QAAA,EAAE,EAAC,qBAAR;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACI;AAAQ,QAAA,EAAE,EAAC,kBAAX;AAA8B,QAAA,OAAO,EAAE,KAAKP,iBAA5C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBADJ,EAEI;AAAQ,QAAA,EAAE,EAAC,yBAAX;AAAqC,QAAA,OAAO,EAAE,KAAKO,iBAAnD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBAFJ,CAlBJ,CADJ;AAyBH;AACJ;;AA5JqC;AA+J1CV,UAAU,CAACkC,SAAX,GAAuB;AACnBC,EAAAA,aAAa,EAAEpC,SAAS,CAACqC,MAAV,CAAiBC,UADb;AAEnBC,EAAAA,QAAQ,EAAEvC,SAAS,CAACwC,MAAV,CAAiBF;AAFR,CAAvB;AAKA,eAAerC,UAAf","sourcesContent":["import React, { Component } from 'react'\nimport PropTypes from 'prop-types';\n\nexport class ItemScreen extends Component {\n    state = {\n        createItem: false\n    }\n    /**\n     *  This function is called when the user presses the submit button in the Edit/Add item screen\n     */\n    submitItemChanges = () => {\n\n        if (this.state.createItem) {\n            this.updateItem();\n        }\n\n        else {\n            this.createNewItem();\n        }\n\n        this.props.currentItem = null;\n\n        this.emptyItemPanel();\n\n        this.props.goList();\n    }\n\n    /**\n     *  This function is called when the user presses the cancel button in the Edit/Add item screen\n     */\n    cancelItemChanges = () => {\n        this.props.currentItem = null;\n        this.setState({createItem: false});\n\n        this.emptyItemPanel();\n\n        this.props.goList();\n    }\n\n    /**\n     *  This function is called to update the item currently being editted by the user\n     */\n    updateItem = () => {\n        let description = document.getElementById('item_description_textfield');\n        this.props.currentItem.description = description;\n\n        let assignedTo = document.getElementById('assigned_to_textfield');\n        this.props.currentItem.assigned_to = assignedTo;\n\n        let dueDate = document.getElementById('due_date_dropdown');\n        this.props.currentItem.dueDate = dueDate;\n\n        let completed = document.getElementById('completed_checkbox');\n        this.props.currentItem.completed = completed;\n\n        this.props.loadList(this.props.todoList);\n    }\n\n    /**\n     *  This function is called to clear the edit/add item screen for the user\n     */\n    emptyItemPanel = () => {\n        let description = document.getElementById('item_description_textfield');\n        description.value = \"\";\n\n        let assignedTo = document.getElementById('assigned_to_textfield');\n        assignedTo.value = \"\";\n\n        let dueDate = document.getElementById('due_date_dropdown');\n        dueDate.value = \"\";\n\n        let completed = document.getElementById('completed_checkbox');\n        completed.checked = false;\n    }\n\n    getLength = () => {\n        let counter = 0;\n\n        this.props.todoList.items.forEach(() => {\n            counter++;\n        });\n\n        return counter;\n    }\n\n    /**\n     *  This function is called to create a item by the user\n     */\n    createNewItem = () => {\n        let position = this.getLength();\n\n        let newItem = {\n            key: position,\n            description: document.getElementById('item_description_textfield').value,\n            assigned_to: document.getElementById('assigned_to_textfield').value,\n            due_date: document.getElementById('due_date_dropdown').value,\n            completed: document.getElementById('completed_checkbox').value\n        }\n\n        this.props.todoList.items.push(newItem);\n        this.props.loadList(this.props.todoList);\n    }\n\n    render() {\n        if (this.props.currentItem) {\n            let itemToLoad = this.props.currentItem;\n            return (\n                <div id='todo_item'>\n                    <div id=\"item_container\">Item</div>\n                    <div id=\"item_name_container\" class=\"text_toolbar\">\n                        <span id=\"description_prompt\">Description:</span>\n                        <input type=\"text\" defaultValue={itemToLoad.description} id=\"item_description_textfield\" />\n                    </div>\n                    <div id=\"assigned_to_container\" class=\"text_toolbar\">\n                        <span id=\"assigned_to_prompt\">Assigned To:</span>\n                        <input type=\"text\" defaultValue={itemToLoad.assigned_to} id=\"assigned_to_textfield\" />\n                    </div>\n                    <div id=\"due_date_container\" class=\"text_toolbar\">\n                        <span id=\"due_date_prompt\">Due Date:</span>\n                        <input type=\"date\" defaultValue={itemToLoad.due_date} id=\"due_date_dropdown\" />\n                    </div>\n                    <div id=\"completed_container\" class=\"text_toolbar\">\n                        <span id=\"completed_prompt\">Completed:</span>\n                        <input type=\"checkbox\" defaultValue={itemToLoad.completed} id=\"completed_checkbox\" />\n                    </div>\n                    <div id=\"list_submit_buttons\">\n                        <button id=\"list_submit_list\" onClick={this.submitItemChanges}>Submit</button>\n                        <button id=\"list_cancel_submit_list\" onClick={this.cancelItemChanges}>Cancel</button>\n                    </div>\n                </div>\n            )\n        }\n        else {\n            return (\n                <div id='todo_item'>\n                    <div id=\"item_container\">Item</div>\n                    <div id=\"item_name_container\" class=\"text_toolbar\">\n                        <span id=\"description_prompt\">Description:</span>\n                        <input type=\"text\" defaultValue={\"\"} id=\"item_description_textfield\" />\n                    </div>\n                    <div id=\"assigned_to_container\" class=\"text_toolbar\">\n                        <span id=\"assigned_to_prompt\">Assigned To:</span>\n                        <input type=\"text\" defaultValue={\"\"} id=\"assigned_to_textfield\" />\n                    </div>\n                    <div id=\"due_date_container\" class=\"text_toolbar\">\n                        <span id=\"due_date_prompt\">Due Date:</span>\n                        <input type=\"date\" defaultValue={\"\"} id=\"due_date_dropdown\" />\n                    </div>\n                    <div id=\"completed_container\" class=\"text_toolbar\">\n                        <span id=\"completed_prompt\">Completed:</span>\n                        <input type=\"checkbox\" defaultValue={false} id=\"completed_checkbox\" />\n                    </div>\n                    <div id=\"list_submit_buttons\">\n                        <button id=\"list_submit_list\" onClick={this.submitItemChanges}>Submit</button>\n                        <button id=\"list_cancel_submit_list\" onClick={this.cancelItemChanges}>Cancel</button>\n                    </div>\n                </div>\n            )\n        }\n    }\n}\n\nItemScreen.propTypes = {\n    currentScreen: PropTypes.string.isRequired,\n    todoItem: PropTypes.object.isRequired\n}\n\nexport default ItemScreen\n"]},"metadata":{},"sourceType":"module"}