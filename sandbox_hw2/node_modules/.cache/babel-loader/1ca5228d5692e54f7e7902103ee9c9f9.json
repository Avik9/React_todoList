{"ast":null,"code":"var _jsxFileName = \"/Users/avik/Desktop/My Stuff/SBU/Junior Year/Fall 2019/CSE 316/Homework 2/sandbox_todo/sandbox_hw2/src/components/item_screen/ItemScreen.js\";\nimport React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nexport class ItemScreen extends Component {\n  constructor(...args) {\n    super(...args);\n\n    this.submitItemChanges = () => {\n      if (this.props.newItem) {\n        this.props.newItem = false;\n        this.createNewItem();\n      } else {\n        this.props.newItem = false;\n        this.updateItem();\n      }\n\n      window.todo.model.itemToEdit = null;\n      window.todo.model.emptyItemPanel();\n      window.todo.model.goList();\n    };\n\n    this.cancelItemChanges = () => {\n      window.todo.model.itemToEdit = null;\n      window.todo.model.newItem = false;\n      window.todo.model.emptyItemPanel();\n      window.todo.model.goList();\n    };\n\n    this.createNewItem = () => {};\n\n    this.updateItem = () => {};\n  }\n\n  render() {\n    return React.createElement(\"div\", {\n      id: \"todo_item\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 49\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      id: \"item_container\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 50\n      },\n      __self: this\n    }, \"Item\"), React.createElement(\"div\", {\n      id: \"item_name_container\",\n      class: \"text_toolbar\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 51\n      },\n      __self: this\n    }, React.createElement(\"span\", {\n      id: \"description_prompt\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 52\n      },\n      __self: this\n    }, \"Description:\"), React.createElement(\"input\", {\n      type: \"text\",\n      id: \"item_description_textfield\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 53\n      },\n      __self: this\n    })), React.createElement(\"div\", {\n      id: \"assigned_to_container\",\n      class: \"text_toolbar\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 55\n      },\n      __self: this\n    }, React.createElement(\"span\", {\n      id: \"assigned_to_prompt\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 56\n      },\n      __self: this\n    }, \"Assigned To:\"), React.createElement(\"input\", {\n      type: \"text\",\n      id: \"assigned_to_textfield\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 57\n      },\n      __self: this\n    })), React.createElement(\"div\", {\n      id: \"due_date_container\",\n      class: \"text_toolbar\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 59\n      },\n      __self: this\n    }, React.createElement(\"span\", {\n      id: \"due_date_prompt\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 60\n      },\n      __self: this\n    }, \"Due Date:\"), React.createElement(\"input\", {\n      type: \"date\",\n      id: \"due_date_dropdown\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 61\n      },\n      __self: this\n    })), React.createElement(\"div\", {\n      id: \"completed_container\",\n      class: \"text_toolbar\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 63\n      },\n      __self: this\n    }, React.createElement(\"span\", {\n      id: \"completed_prompt\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 64\n      },\n      __self: this\n    }, \"Completed:\"), React.createElement(\"input\", {\n      type: \"checkbox\",\n      id: \"completed_checkbox\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 65\n      },\n      __self: this\n    })), React.createElement(\"div\", {\n      id: \"list_submit_buttons\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 67\n      },\n      __self: this\n    }, React.createElement(\"button\", {\n      id: \"list_submit_list\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 68\n      },\n      __self: this\n    }, \"Submit\"), React.createElement(\"button\", {\n      id: \"list_cancel_submit_list\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 69\n      },\n      __self: this\n    }, \"Cancel\")));\n  }\n\n}\nItemScreen.propTypes = {\n  currentScreen: PropTypes.string.isRequired,\n  todoItem: PropTypes.object.isRequired\n};\nexport default ItemScreen;","map":{"version":3,"sources":["/Users/avik/Desktop/My Stuff/SBU/Junior Year/Fall 2019/CSE 316/Homework 2/sandbox_todo/sandbox_hw2/src/components/item_screen/ItemScreen.js"],"names":["React","Component","PropTypes","ItemScreen","submitItemChanges","props","newItem","createNewItem","updateItem","window","todo","model","itemToEdit","emptyItemPanel","goList","cancelItemChanges","render","propTypes","currentScreen","string","isRequired","todoItem","object"],"mappings":"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","sourcesContent":["import React, { Component } from 'react'\nimport PropTypes from 'prop-types';\n\nexport class ItemScreen extends Component {\n    /**\n     *  This function is called when the user presses the submit button in the Edit/Add item screen\n     */\n    submitItemChanges = () => {\n\n        if (this.props.newItem) {\n            this.props.newItem = false;\n            this.createNewItem();\n        }\n\n        else {\n            this.props.newItem = false;\n            this.updateItem();\n        }\n\n        window.todo.model.itemToEdit = null;\n\n        window.todo.model.emptyItemPanel();\n\n        window.todo.model.goList();\n    }\n\n    /**\n     *  This function is called when the user presses the cancel button in the Edit/Add item screen\n     */\n    cancelItemChanges = () => {\n        window.todo.model.itemToEdit = null;\n        window.todo.model.newItem = false;\n\n        window.todo.model.emptyItemPanel();\n\n        window.todo.model.goList();\n    }\n\n    createNewItem = () => {\n\n    }\n\n    updateItem = () => {\n        \n    }\n\n    render() {\n        return (\n            <div id='todo_item'>\n                <div id=\"item_container\">Item</div>\n                <div id=\"item_name_container\" class=\"text_toolbar\">\n                    <span id=\"description_prompt\">Description:</span>\n                    <input type=\"text\" id=\"item_description_textfield\" />\n                </div>\n                <div id=\"assigned_to_container\" class=\"text_toolbar\">\n                    <span id=\"assigned_to_prompt\">Assigned To:</span>\n                    <input type=\"text\" id=\"assigned_to_textfield\" />\n                </div>\n                <div id=\"due_date_container\" class=\"text_toolbar\">\n                    <span id=\"due_date_prompt\">Due Date:</span>\n                    <input type=\"date\" id=\"due_date_dropdown\" />\n                </div>\n                <div id=\"completed_container\" class=\"text_toolbar\">\n                    <span id=\"completed_prompt\">Completed:</span>\n                    <input type=\"checkbox\" id=\"completed_checkbox\" />\n                </div>\n                <div id=\"list_submit_buttons\">\n                    <button id=\"list_submit_list\">Submit</button>\n                    <button id=\"list_cancel_submit_list\">Cancel</button>\n                </div>\n            </div>\n        )\n    }\n}\n\nItemScreen.propTypes = {\n    currentScreen: PropTypes.string.isRequired,\n    todoItem: PropTypes.object.isRequired\n}\n\nexport default ItemScreen\n"]},"metadata":{},"sourceType":"module"}