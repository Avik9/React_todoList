{"ast":null,"code":"import jsTPS from './jsTPS';\n/**\n *\n * @author Avik Kadakia\n */\n\nclass ListOwnerChange_Transaction extends jsTPS {\n  /**\n   * Constructor for this transaction, it initializes this\n   * object with all the data needed to both do and undo\n   * the transaction.\n   * \n   * @param prevOwnerName\n   * @param newOwnerName\n   * @param toDoList\n   */\n  constructor(previousOwner, newOwner, toDoList) {\n    super();\n    this.prevOwnerName = previousOwner;\n    this.newOwnerName = newOwner;\n    this.toDoList = toDoList;\n  }\n  /**\n   * This transaction changes the list owner to new owner.\n   */\n\n\n  doTransaction() {} // Change the list to the new owner\n\n  /**\n   * As the reverse of do, this method changes the list owner to the old owner.\n   */\n\n\n  undoTransaction() {} // Change the list to the old owner\n\n  /**\n   * Provides a textual summary of this transaction.\n   * \n   * @return A string storing a textual summary of this object.\n   */\n\n\n  toString() {\n    return this.prevOwnerName + \" changed to \" + this.newOwnerName;\n  }\n\n}\n\nexport default ListOwnerChange_Transaction;","map":{"version":3,"sources":["/Users/avik/Desktop/My Stuff/SBU/Junior Year/Fall 2019/CSE 316/Homework 2/sandbox_todo/sandbox_hw2/src/components/jsTPS/ListOwnerChange_Transaction.js"],"names":["jsTPS","ListOwnerChange_Transaction","constructor","previousOwner","newOwner","toDoList","prevOwnerName","newOwnerName","doTransaction","undoTransaction","toString"],"mappings":"AAAA,OAAOA,KAAP,MAAkB,SAAlB;AAEA;;;;;AAIA,MAAMC,2BAAN,SAA0CD,KAA1C,CAA+C;AAC3C;;;;;;;;;AASAE,EAAAA,WAAW,CAACC,aAAD,EAAgBC,QAAhB,EAA0BC,QAA1B,EAAoC;AAE3C;AACA,SAAKC,aAAL,GAAqBH,aAArB;AACA,SAAKI,YAAL,GAAoBH,QAApB;AACA,SAAKC,QAAL,GAAgBA,QAAhB;AACH;AAED;;;;;AAGAG,EAAAA,aAAa,GAAG,CAEf,CAFY,CACT;;AAGJ;;;;;AAGAC,EAAAA,eAAe,GAAG,CAEjB,CAFc,CACX;;AAGJ;;;;;;;AAKAC,EAAAA,QAAQ,GAAG;AACP,WAAO,KAAKJ,aAAL,GAAqB,cAArB,GAAsC,KAAKC,YAAlD;AACH;;AAvC0C;;AA0C/C,eAAeN,2BAAf","sourcesContent":["import jsTPS from './jsTPS'\n\n/**\n *\n * @author Avik Kadakia\n */\nclass ListOwnerChange_Transaction extends jsTPS{\n    /**\n     * Constructor for this transaction, it initializes this\n     * object with all the data needed to both do and undo\n     * the transaction.\n     * \n     * @param prevOwnerName\n     * @param newOwnerName\n     * @param toDoList\n     */\n    constructor(previousOwner, newOwner, toDoList) {\n\n        super();\n        this.prevOwnerName = previousOwner;\n        this.newOwnerName = newOwner;\n        this.toDoList = toDoList;\n    }\n\n    /**\n     * This transaction changes the list owner to new owner.\n     */\n    doTransaction() {\n        // Change the list to the new owner\n    }\n\n    /**\n     * As the reverse of do, this method changes the list owner to the old owner.\n     */\n    undoTransaction() {\n        // Change the list to the old owner\n    }\n\n    /**\n     * Provides a textual summary of this transaction.\n     * \n     * @return A string storing a textual summary of this object.\n     */\n    toString() {\n        return this.prevOwnerName + \" changed to \" + this.newOwnerName;\n    }\n}\n\nexport default ListOwnerChange_Transaction"]},"metadata":{},"sourceType":"module"}