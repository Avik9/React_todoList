{"ast":null,"code":"var _jsxFileName = \"/Users/avik/Desktop/My Stuff/SBU/Junior Year/Fall 2019/CSE 316/Homework 2/sandbox_todo/sandbox_hw2/src/components/list_screen/ListScreen.js\";\nimport React, { Component } from 'react';\nimport ListHeading from './ListHeading';\nimport ListItemsTable from './ListItemsTable';\nimport ListTrash from './ListTrash'; // import PropTypes from 'prop-types';\n// import { list } from 'postcss';\n// FOR jsTPS\n\nimport ListNameChange_Transaction from '../jsTPS/ListNameChange_Transaction';\nimport ListOwnerChange_Transaction from '../jsTPS/ListOwnerChange_Transaction';\nimport ListItemOrderChange_Transaction from '../jsTPS/ListItemOrderChange_Transaction';\nimport ListItemEdit_Transaction from '../jsTPS/ListItemEdit_Transaction';\nimport ListItemRemoval_Transaction from '../jsTPS/ListItemRemoval_Transaction';\nlet keys = [];\nexport class ListScreen extends Component {\n  constructor(...args) {\n    super(...args);\n\n    this.setListName = () => {\n      let oldName = this.props.todoList.name;\n      let newName = document.getElementById('list_name_textfield').value;\n\n      if (newName === \"\") {\n        newName = \"(No Name)\";\n      }\n\n      if (newName !== oldName) {\n        let newNameTransaction = new ListNameChange_Transaction(oldName, newName, this.props.todoList);\n        this.props.jsTPSstack.addTransaction(newNameTransaction);\n      }\n\n      return this.props.todoList.name;\n    };\n\n    this.setListOwner = () => {\n      let oldOwner = this.props.todoList.owner;\n      let newOwner = document.getElementById('list_owner_textfield').value;\n\n      if (newOwner === \"\") {\n        newOwner = \"(No Owner)\";\n      }\n\n      if (oldOwner !== newOwner) {\n        let newOwnerTransaction = new ListOwnerChange_Transaction(oldOwner, newOwner, this.props.todoList);\n        this.props.jsTPSstack.addTransaction(newOwnerTransaction);\n      }\n\n      return this.props.todoList.owner;\n    };\n\n    this.keysPressed = e => {\n      // store an entry for every key pressed\n      keys[e.keyCode] = true; // Ctrl + Z\n\n      if (keys[17] && keys[90]) {\n        // do something\n        console.log(\"Pressed Ctrl + Z\");\n        console.log(\"List item order change\");\n        keys[17] = false;\n        keys[90] = false; // prevent default browser behavior\n\n        e.preventDefault();\n\n        if (this.props.jsTPSstack.peekTransaction() instanceof ListNameChange_Transaction) {\n          this.props.jsTPSstack.undoTransaction();\n        }\n\n        if (this.props.jsTPSstack.peekTransaction() instanceof ListOwnerChange_Transaction) {\n          this.props.jsTPSstack.undoTransaction();\n        }\n\n        if (this.props.jsTPSstack.peekTransaction() instanceof ListItemOrderChange_Transaction) {\n          this.props.jsTPSstack.undoTransaction();\n        }\n\n        if (this.props.jsTPSstack.peekTransaction() instanceof ListItemEdit_Transaction) {\n          this.props.jsTPSstack.undoTransaction();\n        }\n\n        if (this.props.jsTPSstack.peekTransaction() instanceof ListItemRemoval_Transaction) {\n          this.props.jsTPSstack.undoTransaction();\n        }\n\n        document.getElementById();\n        this.props.loadList(this.props.todoList);\n      } // Ctrl + Y\n\n\n      if (keys[17] && keys[89]) {\n        // do something\n        console.log(\"Pressed Ctrl + Y\");\n        this.props.jsTPSstack.doTransaction();\n        keys[17] = false;\n        keys[89] = false; // prevent default browser behavior\n\n        e.preventDefault();\n        this.props.loadList(this.props.todoList);\n      }\n\n      return;\n    };\n\n    this.keysReleased = e => {\n      // mark keys that were released\n      keys[e.keyCode] = false;\n    };\n  }\n\n  getListName() {\n    if (this.props.todoList) {\n      let name = this.props.todoList.name;\n      return name;\n    } else return \"\";\n  }\n\n  getListOwner() {\n    if (this.props.todoList) {\n      let owner = this.props.todoList.owner;\n      return owner;\n    }\n  }\n\n  render() {\n    window.addEventListener(\"keydown\", e => this.keysPressed(e), false);\n    window.addEventListener(\"keyup\", e => this.keysReleased(e), false);\n    return React.createElement(\"div\", {\n      id: \"todo_list\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 72\n      },\n      __self: this\n    }, React.createElement(ListHeading, {\n      goHome: this.props.goHome,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 73\n      },\n      __self: this\n    }), React.createElement(ListTrash, {\n      listName: this.getListName(),\n      deleteList: this.props.deleteList,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 74\n      },\n      __self: this\n    }), React.createElement(\"div\", {\n      id: \"list_details_container\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 75\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      id: \"list_details_name_container\",\n      className: \"text_toolbar\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 76\n      },\n      __self: this\n    }, React.createElement(\"span\", {\n      id: \"list_name_prompt\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 77\n      },\n      __self: this\n    }, \"Name:\"), React.createElement(\"input\", {\n      defaultValue: this.getListName(),\n      type: \"text\",\n      id: \"list_name_textfield\",\n      onBlur: () => this.setListName(),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 78\n      },\n      __self: this\n    })), React.createElement(\"div\", {\n      id: \"list_details_owner_container\",\n      className: \"text_toolbar\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 85\n      },\n      __self: this\n    }, React.createElement(\"span\", {\n      id: \"list_owner_prompt\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 86\n      },\n      __self: this\n    }, \"Owner:\"), React.createElement(\"input\", {\n      defaultValue: this.getListOwner(),\n      type: \"text\",\n      id: \"list_owner_textfield\",\n      onBlur: () => this.setListOwner(),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 87\n      },\n      __self: this\n    }))), React.createElement(ListItemsTable, {\n      todoList: this.props.todoList,\n      moveUp: this.moveUp,\n      moveDown: this.moveDown,\n      deleteItem: this.deleteItem,\n      loadList: this.props.loadList,\n      editListItemCard: this.props.editListItemCard,\n      createListItemCard: this.props.createListItemCard,\n      jsTPSstack: this.props.jsTPSstack,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 95\n      },\n      __self: this\n    }));\n  }\n\n}\nexport default ListScreen;","map":{"version":3,"sources":["/Users/avik/Desktop/My Stuff/SBU/Junior Year/Fall 2019/CSE 316/Homework 2/sandbox_todo/sandbox_hw2/src/components/list_screen/ListScreen.js"],"names":["React","Component","ListHeading","ListItemsTable","ListTrash","ListNameChange_Transaction","ListOwnerChange_Transaction","ListItemOrderChange_Transaction","ListItemEdit_Transaction","ListItemRemoval_Transaction","keys","ListScreen","setListName","oldName","props","todoList","name","newName","document","getElementById","value","newNameTransaction","jsTPSstack","addTransaction","setListOwner","oldOwner","owner","newOwner","newOwnerTransaction","keysPressed","e","keyCode","console","log","preventDefault","peekTransaction","undoTransaction","loadList","doTransaction","keysReleased","getListName","getListOwner","render","window","addEventListener","goHome","deleteList","moveUp","moveDown","deleteItem","editListItemCard","createListItemCard"],"mappings":"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","sourcesContent":["import React, { Component } from 'react'\nimport ListHeading from './ListHeading'\nimport ListItemsTable from './ListItemsTable'\nimport ListTrash from './ListTrash'\n// import PropTypes from 'prop-types';\n// import { list } from 'postcss';\n\n// FOR jsTPS\nimport ListNameChange_Transaction from '../jsTPS/ListNameChange_Transaction'\nimport ListOwnerChange_Transaction from '../jsTPS/ListOwnerChange_Transaction'\nimport ListItemOrderChange_Transaction from '../jsTPS/ListItemOrderChange_Transaction'\nimport ListItemEdit_Transaction from '../jsTPS/ListItemEdit_Transaction'\nimport ListItemRemoval_Transaction from '../jsTPS/ListItemRemoval_Transaction'\n\nlet keys = []\nexport class ListScreen extends Component {\n\n    getListName() {\n        if (this.props.todoList) {\n            let name = this.props.todoList.name;\n            return name;\n        }\n        else\n            return \"\";\n    }\n    getListOwner() {\n        if (this.props.todoList) {\n            let owner = this.props.todoList.owner;\n            return owner;\n        }\n    }\n\n    setListName = () => {\n        let oldName = this.props.todoList.name;\n\n        let newName = document.getElementById('list_name_textfield').value;\n        if (newName === \"\") {\n            newName = \"(No Name)\";\n        }\n\n        if (newName !== oldName) {\n            let newNameTransaction = new ListNameChange_Transaction(oldName, newName, this.props.todoList);\n\n            this.props.jsTPSstack.addTransaction(newNameTransaction);\n        }\n\n        return this.props.todoList.name;\n    }\n\n    setListOwner = () => {\n        let oldOwner = this.props.todoList.owner;\n        let newOwner = document.getElementById('list_owner_textfield').value;\n        if (newOwner === \"\") {\n            newOwner = \"(No Owner)\";\n        }\n\n        if (oldOwner !== newOwner) {\n            let newOwnerTransaction = new ListOwnerChange_Transaction(oldOwner, newOwner, this.props.todoList);\n\n            this.props.jsTPSstack.addTransaction(newOwnerTransaction);\n        }\n\n        return this.props.todoList.owner;\n    }\n\n    render() {\n\n        window.addEventListener(\"keydown\", (e) => this.keysPressed(e), false);\n        window.addEventListener(\"keyup\", (e) => this.keysReleased(e), false);\n\n        return (\n            <div id=\"todo_list\">\n                <ListHeading goHome={this.props.goHome} />\n                <ListTrash listName={this.getListName()} deleteList={this.props.deleteList} />\n                <div id=\"list_details_container\">\n                    <div id=\"list_details_name_container\" className=\"text_toolbar\">\n                        <span id=\"list_name_prompt\">Name:</span>\n                        <input\n                            defaultValue={this.getListName()}\n                            type=\"text\"\n                            id=\"list_name_textfield\"\n                            onBlur={() => this.setListName()} />\n\n                    </div>\n                    <div id=\"list_details_owner_container\" className=\"text_toolbar\">\n                        <span id=\"list_owner_prompt\">Owner:</span>\n                        <input\n                            defaultValue={this.getListOwner()}\n                            type=\"text\"\n                            id=\"list_owner_textfield\"\n                            onBlur={() => this.setListOwner()}\n                        />\n                    </div>\n                </div>\n                <ListItemsTable todoList={this.props.todoList}\n                    moveUp={this.moveUp}\n                    moveDown={this.moveDown}\n                    deleteItem={this.deleteItem}\n                    loadList={this.props.loadList}\n                    editListItemCard={this.props.editListItemCard}\n                    createListItemCard={this.props.createListItemCard}\n                    jsTPSstack={this.props.jsTPSstack} />\n            </div>\n        )\n    }\n\n    keysPressed = (e) => { \n        // store an entry for every key pressed\n        keys[e.keyCode] = true;\n        \n        // Ctrl + Z\n        if (keys[17] && keys[90]) {\n            // do something\n            console.log(\"Pressed Ctrl + Z\");\n\n            console.log(\"List item order change\");\n            \n            \n            keys[17] = false; \n            keys[90] = false;\n\n            // prevent default browser behavior\n            e.preventDefault();\t\n\n            if(this.props.jsTPSstack.peekTransaction() instanceof ListNameChange_Transaction)\n            {\n                this.props.jsTPSstack.undoTransaction();\n            }\n            if(this.props.jsTPSstack.peekTransaction() instanceof ListOwnerChange_Transaction)\n            {\n                this.props.jsTPSstack.undoTransaction();\n            }\n            if(this.props.jsTPSstack.peekTransaction() instanceof ListItemOrderChange_Transaction)\n            {\n                this.props.jsTPSstack.undoTransaction();\n            }\n            if(this.props.jsTPSstack.peekTransaction() instanceof ListItemEdit_Transaction)\n            {\n                this.props.jsTPSstack.undoTransaction();\n            }\n            if(this.props.jsTPSstack.peekTransaction() instanceof ListItemRemoval_Transaction)\n            {\n                this.props.jsTPSstack.undoTransaction();\n            }\n\n            document.getElementById()\n\n            this.props.loadList(this.props.todoList);\n        }\n        \n        // Ctrl + Y\n        if (keys[17] && keys[89]) {\n            // do something\n\n            console.log(\"Pressed Ctrl + Y\");\n            this.props.jsTPSstack.doTransaction();\n\n            keys[17] = false; \n            keys[89] = false;\n\n            // prevent default browser behavior\n            e.preventDefault();\t\n\n            this.props.loadList(this.props.todoList);\n        }\n\n        return;\n    }\n\n    keysReleased = (e) => {\n        // mark keys that were released\n        keys[e.keyCode] = false;\n    }\n}\n\nexport default ListScreen\n"]},"metadata":{},"sourceType":"module"}