{"ast":null,"code":"var _jsxFileName = \"/Users/avik/Desktop/My Stuff/SBU/Junior Year/Fall 2019/CSE 316/Homework 2/sandbox_todo/sandbox_hw2/src/App.js\";\nimport React, { Component } from 'react';\nimport testTodoListData from './TestTodoListData.json';\nimport HomeScreen from './components/home_screen/HomeScreen';\nimport ItemScreen from './components/item_screen/ItemScreen';\nimport ListScreen from './components/list_screen/ListScreen';\nconst AppScreen = {\n  HOME_SCREEN: \"HOME_SCREEN\",\n  LIST_SCREEN: \"LIST_SCREEN\",\n  ITEM_SCREEN: \"ITEM_SCREEN\"\n};\n\nclass App extends Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      currentScreen: AppScreen.HOME_SCREEN,\n      todoLists: testTodoListData.todoLists,\n      currentList: null,\n      currentItem: null,\n      createItem: false\n    };\n\n    this.editListItemCard = () => {};\n\n    this.createListItemCard = itemToEdit => {};\n\n    this.goHome = () => {\n      this.setState({\n        currentScreen: AppScreen.HOME_SCREEN\n      });\n      this.setState({\n        currentList: null\n      });\n    };\n\n    this.goItem = () => {\n      this.setState({\n        currentScreen: AppScreen.ITEM_SCREEN\n      });\n    };\n\n    this.deleteList = listName => {\n      this.state.todoLists.forEach((listItem, indexOfList) => {\n        if (listItem.name === listName) {\n          if (indexOfList >= 0) {\n            this.state.todoLists.splice(indexOfList, 1);\n            this.goHome();\n          }\n        }\n      });\n    };\n\n    this.createNewList = () => {\n      let position = this.state.todoLists.length;\n      let newList = {\n        \"key\": position,\n        \"name\": \"Unknown\",\n        \"owner\": \"Unknown\",\n        \"items\": []\n      };\n      this.state.todoLists.push(newList);\n      this.loadList(newList);\n    };\n\n    this.loadList = todoListToLoad => {\n      this.setState({\n        currentScreen: AppScreen.LIST_SCREEN\n      });\n      this.setState({\n        currentList: todoListToLoad\n      });\n      console.log(\"currentList: \" + this.state.currentList);\n      console.log(\"currentScreen: \" + this.state.currentScreen);\n    };\n  }\n\n  render() {\n    switch (this.state.currentScreen) {\n      case AppScreen.HOME_SCREEN:\n        return React.createElement(HomeScreen, {\n          loadList: this.loadList.bind(this),\n          todoLists: this.state.todoLists,\n          createNewList: this.createNewList,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 73\n          },\n          __self: this\n        });\n\n      case AppScreen.LIST_SCREEN:\n        return React.createElement(ListScreen, {\n          goHome: this.goHome.bind(this),\n          todoList: this.state.currentList,\n          deleteList: this.deleteList,\n          loadList: this.loadList,\n          editListItemCard: this.editListItemCard,\n          createListItemCard: this.createListItemCard,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 78\n          },\n          __self: this\n        });\n\n      case AppScreen.ITEM_SCREEN:\n        return React.createElement(ItemScreen, {\n          currentItem: this.state.currentItem,\n          createItem: this.state.createItem,\n          loadList: this.loadList,\n          todoList: this.state.currentList,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 86\n          },\n          __self: this\n        });\n\n      default:\n        return React.createElement(\"div\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 92\n          },\n          __self: this\n        }, \"ERROR\");\n    }\n  }\n\n}\n\nexport default App;","map":{"version":3,"sources":["/Users/avik/Desktop/My Stuff/SBU/Junior Year/Fall 2019/CSE 316/Homework 2/sandbox_todo/sandbox_hw2/src/App.js"],"names":["React","Component","testTodoListData","HomeScreen","ItemScreen","ListScreen","AppScreen","HOME_SCREEN","LIST_SCREEN","ITEM_SCREEN","App","state","currentScreen","todoLists","currentList","currentItem","createItem","editListItemCard","createListItemCard","itemToEdit","goHome","setState","goItem","deleteList","listName","forEach","listItem","indexOfList","name","splice","createNewList","position","length","newList","push","loadList","todoListToLoad","console","log","render","bind"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\nimport testTodoListData from './TestTodoListData.json'\nimport HomeScreen from './components/home_screen/HomeScreen'\nimport ItemScreen from './components/item_screen/ItemScreen'\nimport ListScreen from './components/list_screen/ListScreen'\n\nconst AppScreen = {\n  HOME_SCREEN: \"HOME_SCREEN\",\n  LIST_SCREEN: \"LIST_SCREEN\",\n  ITEM_SCREEN: \"ITEM_SCREEN\"\n}\n\nclass App extends Component {\n  state = {\n    currentScreen: AppScreen.HOME_SCREEN,\n    todoLists: testTodoListData.todoLists,\n    currentList: null,\n    currentItem: null,\n    createItem: false\n  }\n\n  editListItemCard = () => {\n\n  }\n\n  createListItemCard = (itemToEdit) => {\n    \n  }\n\n  goHome = () => {\n    this.setState({ currentScreen: AppScreen.HOME_SCREEN });\n    this.setState({ currentList: null });\n  }\n\n  goItem = () => {\n    this.setState({ currentScreen: AppScreen.ITEM_SCREEN });\n  }\n\n  deleteList = (listName) => {\n    this.state.todoLists.forEach((listItem, indexOfList) => {\n      if (listItem.name === listName) {\n        if (indexOfList >= 0) {\n          this.state.todoLists.splice(indexOfList, 1);\n          this.goHome();\n        }\n      }\n    });\n  }\n\n  createNewList = () => {\n    let position = this.state.todoLists.length;\n    let newList = {\n      \"key\": position,\n      \"name\": \"Unknown\",\n      \"owner\": \"Unknown\",\n      \"items\": []\n    }\n\n    this.state.todoLists.push(newList);\n    this.loadList(newList);\n  }\n\n  loadList = (todoListToLoad) => {\n    this.setState({ currentScreen: AppScreen.LIST_SCREEN });\n    this.setState({ currentList: todoListToLoad });\n    console.log(\"currentList: \" + this.state.currentList);\n    console.log(\"currentScreen: \" + this.state.currentScreen);\n  }\n\n  render() {\n    switch (this.state.currentScreen) {\n      case AppScreen.HOME_SCREEN:\n        return <HomeScreen\n          loadList={this.loadList.bind(this)}\n          todoLists={this.state.todoLists}\n          createNewList={this.createNewList} />;\n      case AppScreen.LIST_SCREEN:\n        return <ListScreen\n          goHome={this.goHome.bind(this)}\n          todoList={this.state.currentList}\n          deleteList={this.deleteList}\n          loadList={this.loadList}\n          editListItemCard={this.editListItemCard}\n          createListItemCard={this.createListItemCard} />;\n      case AppScreen.ITEM_SCREEN:\n        return <ItemScreen \n          currentItem={this.state.currentItem}\n          createItem={this.state.createItem}\n          loadList={this.loadList}\n          todoList={this.state.currentList}/>;\n      default:\n        return <div>ERROR</div>;\n    }\n  }\n}\n\nexport default App;"]},"metadata":{},"sourceType":"module"}