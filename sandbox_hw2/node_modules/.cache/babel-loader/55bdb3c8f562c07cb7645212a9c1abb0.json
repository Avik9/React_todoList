{"ast":null,"code":"var _jsxFileName = \"/Users/avik/Desktop/My Stuff/SBU/Junior Year/Fall 2019/CSE 316/Homework 2/sandbox_todo/sandbox_hw2/src/components/item_screen/ItemScreen.js\";\nimport React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nexport class ItemScreen extends Component {\n  constructor(...args) {\n    super(...args);\n\n    this.submitItemChanges = () => {\n      if (this.props.newItem) {\n        this.props.newItem = false;\n        this.createNewItem();\n      } else {\n        this.props.newItem = false;\n        this.updateItem();\n      }\n\n      this.props.itemToEdit = null;\n      this.emptyItemPanel();\n      this.props.goList();\n    };\n\n    this.cancelItemChanges = () => {\n      this.props.itemToEdit = null;\n      this.props.newItem = false;\n      this.emptyItemPanel();\n      this.props.goList();\n    };\n\n    this.updateItem = () => {\n      let description = document.getElementById('item_description_textfield');\n      this.props.currentItem.description = description;\n      let assignedTo = document.getElementById('assigned_to_textfield');\n      this.props.currentItem.assigned_to = assignedTo;\n      let dueDate = document.getElementById('due_date_dropdown');\n      this.props.currentItem.dueDate = dueDate;\n      let completed = document.getElementById('completed_checkbox');\n      this.props.currentItem.completed = completed;\n      this.props.loadList(this.props.todoList);\n    };\n\n    this.emptyItemPanel = () => {\n      let description = document.getElementById('item_description_textfield');\n      description.value = \"\";\n      let assignedTo = document.getElementById('assigned_to_textfield');\n      assignedTo.value = \"\";\n      let dueDate = document.getElementById('due_date_dropdown');\n      dueDate.value = \"\";\n      let completed = document.getElementById('completed_checkbox');\n      completed.checked = false;\n    };\n\n    this.getLength = () => {\n      let counter = 0;\n      this.props.todoList.items.forEach(() => {\n        counter++;\n      });\n      return counter;\n    };\n\n    this.createNewItem = () => {\n      let position = this.getLength();\n      let newItem = {\n        key: position,\n        description: document.getElementById('item_description_textfield').value,\n        assigned_to: document.getElementById('assigned_to_textfield').value,\n        due_date: document.getElementById('due_date_dropdown').value,\n        completed: document.getElementById('completed_checkbox').value\n      };\n      this.props.todoList.items.push(newItem);\n      this.props.loadList(this.props.todoList);\n    };\n  }\n\n  render() {\n    return React.createElement(\"div\", {\n      id: \"todo_item\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 106\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      id: \"item_container\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 107\n      },\n      __self: this\n    }, \"Item\"), React.createElement(\"div\", {\n      id: \"item_name_container\",\n      class: \"text_toolbar\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 108\n      },\n      __self: this\n    }, React.createElement(\"span\", {\n      id: \"description_prompt\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 109\n      },\n      __self: this\n    }, \"Description:\"), React.createElement(\"input\", {\n      type: \"text\",\n      defaultValue: \"\",\n      id: \"item_description_textfield\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 110\n      },\n      __self: this\n    })), React.createElement(\"div\", {\n      id: \"assigned_to_container\",\n      class: \"text_toolbar\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 112\n      },\n      __self: this\n    }, React.createElement(\"span\", {\n      id: \"assigned_to_prompt\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 113\n      },\n      __self: this\n    }, \"Assigned To:\"), React.createElement(\"input\", {\n      type: \"text\",\n      defaultValue: \"\",\n      id: \"assigned_to_textfield\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 114\n      },\n      __self: this\n    })), React.createElement(\"div\", {\n      id: \"due_date_container\",\n      class: \"text_toolbar\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 116\n      },\n      __self: this\n    }, React.createElement(\"span\", {\n      id: \"due_date_prompt\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 117\n      },\n      __self: this\n    }, \"Due Date:\"), React.createElement(\"input\", {\n      type: \"date\",\n      defaultValue: \"\",\n      id: \"due_date_dropdown\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 118\n      },\n      __self: this\n    })), React.createElement(\"div\", {\n      id: \"completed_container\",\n      class: \"text_toolbar\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 120\n      },\n      __self: this\n    }, React.createElement(\"span\", {\n      id: \"completed_prompt\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 121\n      },\n      __self: this\n    }, \"Completed:\"), React.createElement(\"input\", {\n      type: \"checkbox\",\n      defaultValue: false,\n      id: \"completed_checkbox\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 122\n      },\n      __self: this\n    })), React.createElement(\"div\", {\n      id: \"list_submit_buttons\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 124\n      },\n      __self: this\n    }, React.createElement(\"button\", {\n      id: \"list_submit_list\",\n      onClick: this.submitItemChanges,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 125\n      },\n      __self: this\n    }, \"Submit\"), React.createElement(\"button\", {\n      id: \"list_cancel_submit_list\",\n      onClick: this.cancelItemChanges,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 126\n      },\n      __self: this\n    }, \"Cancel\")));\n  }\n\n}\nItemScreen.propTypes = {\n  currentScreen: PropTypes.string.isRequired,\n  todoItem: PropTypes.object.isRequired\n};\nexport default ItemScreen;","map":{"version":3,"sources":["/Users/avik/Desktop/My Stuff/SBU/Junior Year/Fall 2019/CSE 316/Homework 2/sandbox_todo/sandbox_hw2/src/components/item_screen/ItemScreen.js"],"names":["React","Component","PropTypes","ItemScreen","submitItemChanges","props","newItem","createNewItem","updateItem","itemToEdit","emptyItemPanel","goList","cancelItemChanges","description","document","getElementById","currentItem","assignedTo","assigned_to","dueDate","completed","loadList","todoList","value","checked","getLength","counter","items","forEach","position","key","due_date","push","render","propTypes","currentScreen","string","isRequired","todoItem","object"],"mappings":"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","sourcesContent":["import React, { Component } from 'react'\nimport PropTypes from 'prop-types';\n\nexport class ItemScreen extends Component {\n    /**\n     *  This function is called when the user presses the submit button in the Edit/Add item screen\n     */\n    submitItemChanges = () => {\n\n        if (this.props.newItem) {\n            this.props.newItem = false;\n            this.createNewItem();\n        }\n\n        else {\n            this.props.newItem = false;\n            this.updateItem();\n        }\n\n        this.props.itemToEdit = null;\n\n        this.emptyItemPanel();\n\n        this.props.goList();\n    }\n\n    /**\n     *  This function is called when the user presses the cancel button in the Edit/Add item screen\n     */\n    cancelItemChanges = () => {\n        this.props.itemToEdit = null;\n        this.props.newItem = false;\n\n        this.emptyItemPanel();\n\n        this.props.goList();\n    }\n\n    /**\n     *  This function is called to update the item currently being editted by the user\n     */\n    updateItem = () => {\n        let description = document.getElementById('item_description_textfield');\n        this.props.currentItem.description = description;\n\n        let assignedTo = document.getElementById('assigned_to_textfield');\n        this.props.currentItem.assigned_to = assignedTo;\n\n        let dueDate = document.getElementById('due_date_dropdown');\n        this.props.currentItem.dueDate = dueDate;\n\n        let completed = document.getElementById('completed_checkbox');\n        this.props.currentItem.completed = completed;\n\n        this.props.loadList(this.props.todoList);\n    }\n\n    /**\n     *  This function is called to clear the edit/add item screen for the user\n     */\n    emptyItemPanel = () => {\n        let description = document.getElementById('item_description_textfield');\n        description.value = \"\";\n\n        let assignedTo = document.getElementById('assigned_to_textfield');\n        assignedTo.value = \"\";\n\n        let dueDate = document.getElementById('due_date_dropdown');\n        dueDate.value = \"\";\n\n        let completed = document.getElementById('completed_checkbox');\n        completed.checked = false;\n    }\n\n    getLength = () =>\n    {\n        let counter = 0;\n\n        this.props.todoList.items.forEach(() => {\n            counter++;\n          });\n\n        return counter;\n    }\n\n    /**\n     *  This function is called to create a item by the user\n     */\n    createNewItem = () => {\n        let position = this.getLength();\n\n        let newItem = {\n            key: position,\n            description: document.getElementById('item_description_textfield').value,\n            assigned_to: document.getElementById('assigned_to_textfield').value,\n            due_date: document.getElementById('due_date_dropdown').value,\n            completed: document.getElementById('completed_checkbox').value\n        }\n\n        this.props.todoList.items.push(newItem);\n        this.props.loadList(this.props.todoList);\n    }\n\n    render() {\n        return (\n            <div id='todo_item'>\n                <div id=\"item_container\">Item</div>\n                <div id=\"item_name_container\" class=\"text_toolbar\">\n                    <span id=\"description_prompt\">Description:</span>\n                    <input type=\"text\" defaultValue={\"\"} id=\"item_description_textfield\" />\n                </div>\n                <div id=\"assigned_to_container\" class=\"text_toolbar\">\n                    <span id=\"assigned_to_prompt\">Assigned To:</span>\n                    <input type=\"text\" defaultValue={\"\"} id=\"assigned_to_textfield\" />\n                </div>\n                <div id=\"due_date_container\" class=\"text_toolbar\">\n                    <span id=\"due_date_prompt\">Due Date:</span>\n                    <input type=\"date\" defaultValue={\"\"} id=\"due_date_dropdown\" />\n                </div>\n                <div id=\"completed_container\" class=\"text_toolbar\">\n                    <span id=\"completed_prompt\">Completed:</span>\n                    <input type=\"checkbox\" defaultValue={false} id=\"completed_checkbox\" />\n                </div>\n                <div id=\"list_submit_buttons\">\n                    <button id=\"list_submit_list\" onClick={this.submitItemChanges}>Submit</button>\n                    <button id=\"list_cancel_submit_list\" onClick={this.cancelItemChanges}>Cancel</button>\n                </div>\n            </div>\n        )\n    }\n}\n\nItemScreen.propTypes = {\n    currentScreen: PropTypes.string.isRequired,\n    todoItem: PropTypes.object.isRequired\n}\n\nexport default ItemScreen\n"]},"metadata":{},"sourceType":"module"}