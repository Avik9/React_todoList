{"ast":null,"code":"var _jsxFileName = \"/Users/avik/Desktop/My Stuff/SBU/Junior Year/Fall 2019/CSE 316/Homework 2/sandbox_todo/sandbox_hw2/src/components/item_screen/ItemScreen.js\";\nimport React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nexport class ItemScreen extends Component {\n  constructor(...args) {\n    super(...args);\n\n    this.submitItemChanges = () => {\n      if (this.props.newItem) {\n        this.props.newItem = false;\n        this.createNewItem();\n      } else {\n        this.props.newItem = false;\n        this.updateItem();\n      }\n\n      this.props.itemToEdit = null; // window.todo.model.emptyItemPanel();\n\n      this.props.goList();\n    };\n\n    this.cancelItemChanges = () => {\n      this.props.itemToEdit = null;\n      this.props.newItem = false; // window.todo.model.emptyItemPanel();\n\n      this.props.goList();\n    };\n\n    this.createNewItem = () => {};\n\n    this.updateItem = () => {};\n\n    this.getLength = () => {\n      let counter = 0;\n      this.props.todoList.items.forEach(() => {\n        counter++;\n      });\n      return counter;\n    };\n\n    this.createNewItem = () => {\n      let position = this.getLength();\n      this.props.goItem();\n      let newItem = {\n        key: position,\n        description: document.getElementById('item_description_textfield').value,\n        assigned_to: document.getElementById('assigned_to_textfield').value,\n        due_date: document.getElementById('due_date_dropdown').value,\n        completed: document.getElementById('completed_checkbox').value\n      };\n      this.props.todoList.items.push(newItem);\n      this.props.loadList(this.props.todoList);\n    };\n  }\n\n  render() {\n    return React.createElement(\"div\", {\n      id: \"todo_item\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 77\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      id: \"item_container\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 78\n      },\n      __self: this\n    }, \"Item\"), React.createElement(\"div\", {\n      id: \"item_name_container\",\n      class: \"text_toolbar\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 79\n      },\n      __self: this\n    }, React.createElement(\"span\", {\n      id: \"description_prompt\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 80\n      },\n      __self: this\n    }, \"Description:\"), React.createElement(\"input\", {\n      type: \"text\",\n      id: \"item_description_textfield\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 81\n      },\n      __self: this\n    })), React.createElement(\"div\", {\n      id: \"assigned_to_container\",\n      class: \"text_toolbar\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 83\n      },\n      __self: this\n    }, React.createElement(\"span\", {\n      id: \"assigned_to_prompt\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 84\n      },\n      __self: this\n    }, \"Assigned To:\"), React.createElement(\"input\", {\n      type: \"text\",\n      id: \"assigned_to_textfield\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 85\n      },\n      __self: this\n    })), React.createElement(\"div\", {\n      id: \"due_date_container\",\n      class: \"text_toolbar\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 87\n      },\n      __self: this\n    }, React.createElement(\"span\", {\n      id: \"due_date_prompt\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 88\n      },\n      __self: this\n    }, \"Due Date:\"), React.createElement(\"input\", {\n      type: \"date\",\n      id: \"due_date_dropdown\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 89\n      },\n      __self: this\n    })), React.createElement(\"div\", {\n      id: \"completed_container\",\n      class: \"text_toolbar\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 91\n      },\n      __self: this\n    }, React.createElement(\"span\", {\n      id: \"completed_prompt\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 92\n      },\n      __self: this\n    }, \"Completed:\"), React.createElement(\"input\", {\n      type: \"checkbox\",\n      id: \"completed_checkbox\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 93\n      },\n      __self: this\n    })), React.createElement(\"div\", {\n      id: \"list_submit_buttons\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 95\n      },\n      __self: this\n    }, React.createElement(\"button\", {\n      id: \"list_submit_list\",\n      onClick: this.submitItemChanges,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 96\n      },\n      __self: this\n    }, \"Submit\"), React.createElement(\"button\", {\n      id: \"list_cancel_submit_list\",\n      onClick: this.cancelItemChanges,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 97\n      },\n      __self: this\n    }, \"Cancel\")));\n  }\n\n}\nItemScreen.propTypes = {\n  currentScreen: PropTypes.string.isRequired,\n  todoItem: PropTypes.object.isRequired\n};\nexport default ItemScreen;","map":{"version":3,"sources":["/Users/avik/Desktop/My Stuff/SBU/Junior Year/Fall 2019/CSE 316/Homework 2/sandbox_todo/sandbox_hw2/src/components/item_screen/ItemScreen.js"],"names":["React","Component","PropTypes","ItemScreen","submitItemChanges","props","newItem","createNewItem","updateItem","itemToEdit","goList","cancelItemChanges","getLength","counter","todoList","items","forEach","position","goItem","key","description","document","getElementById","value","assigned_to","due_date","completed","push","loadList","render","propTypes","currentScreen","string","isRequired","todoItem","object"],"mappings":"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","sourcesContent":["import React, { Component } from 'react'\nimport PropTypes from 'prop-types';\n\nexport class ItemScreen extends Component {\n    /**\n     *  This function is called when the user presses the submit button in the Edit/Add item screen\n     */\n    submitItemChanges = () => {\n\n        if (this.props.newItem) {\n            this.props.newItem = false;\n            this.createNewItem();\n        }\n\n        else {\n            this.props.newItem = false;\n            this.updateItem();\n        }\n\n        this.props.itemToEdit = null;\n\n        // window.todo.model.emptyItemPanel();\n\n        this.props.goList();\n    }\n\n    /**\n     *  This function is called when the user presses the cancel button in the Edit/Add item screen\n     */\n    cancelItemChanges = () => {\n        this.props.itemToEdit = null;\n        this.props.newItem = false;\n\n        // window.todo.model.emptyItemPanel();\n\n        this.props.goList();\n    }\n\n    createNewItem = () => {\n\n    }\n\n    updateItem = () => {\n        \n    }\n\n    getLength = () =>\n    {\n        let counter = 0;\n\n        this.props.todoList.items.forEach(() => {\n            counter++;\n          });\n\n        return counter;\n    }\n\n    createNewItem = () => {\n        let position = this.getLength();\n\n        this.props.goItem();\n\n        let newItem = {\n            key: position,\n            description: document.getElementById('item_description_textfield').value,\n            assigned_to: document.getElementById('assigned_to_textfield').value,\n            due_date: document.getElementById('due_date_dropdown').value,\n            completed: document.getElementById('completed_checkbox').value\n        }\n\n        this.props.todoList.items.push(newItem);\n        this.props.loadList(this.props.todoList);\n    }\n\n    render() {\n        return (\n            <div id='todo_item'>\n                <div id=\"item_container\">Item</div>\n                <div id=\"item_name_container\" class=\"text_toolbar\">\n                    <span id=\"description_prompt\">Description:</span>\n                    <input type=\"text\" id=\"item_description_textfield\" />\n                </div>\n                <div id=\"assigned_to_container\" class=\"text_toolbar\">\n                    <span id=\"assigned_to_prompt\">Assigned To:</span>\n                    <input type=\"text\" id=\"assigned_to_textfield\" />\n                </div>\n                <div id=\"due_date_container\" class=\"text_toolbar\">\n                    <span id=\"due_date_prompt\">Due Date:</span>\n                    <input type=\"date\" id=\"due_date_dropdown\" />\n                </div>\n                <div id=\"completed_container\" class=\"text_toolbar\">\n                    <span id=\"completed_prompt\">Completed:</span>\n                    <input type=\"checkbox\" id=\"completed_checkbox\" />\n                </div>\n                <div id=\"list_submit_buttons\">\n                    <button id=\"list_submit_list\" onClick={this.submitItemChanges}>Submit</button>\n                    <button id=\"list_cancel_submit_list\" onClick={this.cancelItemChanges}>Cancel</button>\n                </div>\n            </div>\n        )\n    }\n}\n\nItemScreen.propTypes = {\n    currentScreen: PropTypes.string.isRequired,\n    todoItem: PropTypes.object.isRequired\n}\n\nexport default ItemScreen\n"]},"metadata":{},"sourceType":"module"}