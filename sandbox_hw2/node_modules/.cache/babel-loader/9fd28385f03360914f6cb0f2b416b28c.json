{"ast":null,"code":"var _jsxFileName = \"/Users/avik/Desktop/My Stuff/SBU/Junior Year/Fall 2019/CSE 316/Homework 2/sandbox_todo/sandbox_hw2/src/App.js\";\nimport React, { Component } from 'react';\nimport testTodoListData from './TestTodoListData.json';\nimport HomeScreen from './components/home_screen/HomeScreen';\nimport ItemScreen from './components/item_screen/ItemScreen';\nimport ListScreen from './components/list_screen/ListScreen';\nconst AppScreen = {\n  HOME_SCREEN: \"HOME_SCREEN\",\n  LIST_SCREEN: \"LIST_SCREEN\",\n  ITEM_SCREEN: \"ITEM_SCREEN\"\n};\n\nclass App extends Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      currentScreen: AppScreen.HOME_SCREEN,\n      todoLists: testTodoListData.todoLists,\n      currentList: null\n    };\n\n    this.goHome = () => {\n      this.setState({\n        currentScreen: AppScreen.HOME_SCREEN\n      });\n      this.setState({\n        currentList: null\n      });\n    };\n\n    this.goItem = () => {\n      this.setState({\n        currentScreen: AppScreen.ITEM_SCREEN\n      });\n    };\n\n    this.deleteList = listName => {\n      this.state.todoLists.forEach((listItem, indexOfList) => {\n        if (listItem.name === listName) {\n          if (indexOfList >= 0) {\n            this.state.todoLists.splice(indexOfList, 1);\n            this.goHome();\n          }\n        }\n      });\n    };\n\n    this.createNewList = () => {\n      let position = this.state.todoList.length;\n      let newList = {\n        \"key\": position,\n        \"name\": \"Unknown\",\n        \"owner\": \"Unknown\",\n        \"items\": []\n      };\n      this.state.todoLists.push(newList);\n      this.goHome();\n    };\n\n    this.loadList = todoListToLoad => {\n      this.setState({\n        currentScreen: AppScreen.LIST_SCREEN\n      });\n      this.setState({\n        currentList: todoListToLoad\n      });\n      console.log(\"currentList: \" + this.state.currentList);\n      console.log(\"currentScreen: \" + this.state.currentScreen);\n    };\n  }\n\n  render() {\n    switch (this.state.currentScreen) {\n      case AppScreen.HOME_SCREEN:\n        return React.createElement(HomeScreen, {\n          loadList: this.loadList.bind(this),\n          todoLists: this.state.todoLists,\n          createNewList: this.createNewList,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 63\n          },\n          __self: this\n        });\n\n      case AppScreen.LIST_SCREEN:\n        return React.createElement(ListScreen, {\n          goHome: this.goHome.bind(this),\n          todoList: this.state.currentList,\n          deleteList: this.deleteList,\n          loadList: this.loadList,\n          goItem: this.goItem,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 68\n          },\n          __self: this\n        });\n\n      case AppScreen.ITEM_SCREEN:\n        return React.createElement(ItemScreen, {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 75\n          },\n          __self: this\n        });\n\n      default:\n        return React.createElement(\"div\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 77\n          },\n          __self: this\n        }, \"ERROR\");\n    }\n  }\n\n}\n\nexport default App;","map":{"version":3,"sources":["/Users/avik/Desktop/My Stuff/SBU/Junior Year/Fall 2019/CSE 316/Homework 2/sandbox_todo/sandbox_hw2/src/App.js"],"names":["React","Component","testTodoListData","HomeScreen","ItemScreen","ListScreen","AppScreen","HOME_SCREEN","LIST_SCREEN","ITEM_SCREEN","App","state","currentScreen","todoLists","currentList","goHome","setState","goItem","deleteList","listName","forEach","listItem","indexOfList","name","splice","createNewList","position","todoList","length","newList","push","loadList","todoListToLoad","console","log","render","bind"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\nimport testTodoListData from './TestTodoListData.json'\nimport HomeScreen from './components/home_screen/HomeScreen'\nimport ItemScreen from './components/item_screen/ItemScreen'\nimport ListScreen from './components/list_screen/ListScreen'\n\nconst AppScreen = {\n  HOME_SCREEN: \"HOME_SCREEN\",\n  LIST_SCREEN: \"LIST_SCREEN\",\n  ITEM_SCREEN: \"ITEM_SCREEN\"\n}\n\nclass App extends Component {\n  state = {\n    currentScreen: AppScreen.HOME_SCREEN,\n    todoLists: testTodoListData.todoLists,\n    currentList: null\n  }\n\n  goHome = () => {\n    this.setState({ currentScreen: AppScreen.HOME_SCREEN });\n    this.setState({ currentList: null });\n  }\n\n  goItem = () => {\n    this.setState({ currentScreen: AppScreen.ITEM_SCREEN });\n  }\n\n  deleteList = (listName) => {\n    this.state.todoLists.forEach((listItem, indexOfList) => {\n      if (listItem.name === listName) {\n        if (indexOfList >= 0) {\n          this.state.todoLists.splice(indexOfList, 1);\n          this.goHome();\n        }\n      }\n    });\n  }\n\n  createNewList = () => {\n    let position = this.state.todoList.length;\n    let newList = {\n      \"key\": position,\n      \"name\": \"Unknown\",\n      \"owner\": \"Unknown\",\n      \"items\": []\n    }\n\n    this.state.todoLists.push(newList);\n    this.goHome();\n  }\n\n  loadList = (todoListToLoad) => {\n    this.setState({ currentScreen: AppScreen.LIST_SCREEN });\n    this.setState({ currentList: todoListToLoad });\n    console.log(\"currentList: \" + this.state.currentList);\n    console.log(\"currentScreen: \" + this.state.currentScreen);\n  }\n\n  render() {\n    switch (this.state.currentScreen) {\n      case AppScreen.HOME_SCREEN:\n        return <HomeScreen\n          loadList={this.loadList.bind(this)}\n          todoLists={this.state.todoLists}\n          createNewList={this.createNewList} />;\n      case AppScreen.LIST_SCREEN:\n        return <ListScreen\n          goHome={this.goHome.bind(this)}\n          todoList={this.state.currentList}\n          deleteList={this.deleteList}\n          loadList={this.loadList}\n          goItem={this.goItem} />;\n      case AppScreen.ITEM_SCREEN:\n        return <ItemScreen />;\n      default:\n        return <div>ERROR</div>;\n    }\n  }\n}\n\nexport default App;"]},"metadata":{},"sourceType":"module"}